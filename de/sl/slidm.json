{"title": "PDF", "author": "PDF", "url": "https://dbis.eprints.uni-ulm.de/1488/1/BA_Stoe_2017.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "id": "PDF", "license": "PDF", "body": "PDF", "comments": "PDF", "commentsbody": "PDF", "raw_text": "PDF", "text": "Universit\u00e4t Ulm | 89069 Ulm | Germany Fakult\u00e4t f\u00fcr\nIngenieurwissenschaften,\nInformatik und\nPsychologie\nInstitut f\u00fcr Datenbanken\nund Informationssysteme\nEvaluierung der Google Cardboard API\nanhand einer mobile medical App\nBachelorarbeit an der Universit\u00e4t Ulm\nVorgelegt von:\nLukas St\u00f6ferle\nlukas.stoeferle@uni-ulm.de\nGutachter:\nProf. Dr. Manfred Reichert\nBetreuer:\nMarc Schickler\nWintersemester 16/17Fassung 29. M\u00e4rz 2017\nc\rWintersemester 16/17 Lukas St\u00f6ferle\nThis work is licensed under the Creative Commons. Attribution-NonCommercial-ShareAlike 3.0\nLicense. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/de/\nor send a letter to Creative Commons, 543 Howard Street, 5th Floor, San Francisco, California,\n94105, USA.\nSatz: PDF-LATEX 2\u03b5Abstract\nDie Omnipr\u00e4senz von mobilen Ger\u00e4ten erm\u00f6glicht neue und innovative Wege die Ge-\nsundheit der Bev\u00f6lkerung zu f\u00f6rdern. Neben Anwendungen f\u00fcr Fitness und Ern\u00e4hrung\n\ufb01nden auch immer mehr medizinische Anwendungen Verwendung auf dem Smartphone,\ndie dem Benutzern bei der Bew\u00e4ltigung bestimmter Krankheiten helfen k\u00f6nnen. Tinnitus\nist eine dieser Krankheiten f\u00fcr die es momentan kein Heilmittel gibt, die sich aber immer\nmehr und mehr verbreitet. Es existieren lediglich verschiedene Therapieans\u00e4tze, die\neine Verbesserung der Tinnitus-Belastung erm\u00f6glichen.\nZiel dieser Arbeit ist die Entwicklung einer mobilen Anwendung, die das Konzept der\nTinnitus-Retraining-Therapie spielerisch umsetzt. Durch r\u00e4umliches H\u00f6ren soll der Be-\nnutzer die Schallquelle von bestimmten Ger\u00e4uschen lokalisieren. Somit soll erreicht\nwerden, dass der Benutzer den Tinnitus durch auditive Stimulation vor\u00fcbergehend nicht\nmehr wahrnimmt. Eine begleitende Studie vergleicht die Umsetzung mit weiteren An-\nwendungen, die das selbe Konzept verfolgen. Die aus der Anwendung gewonnenen\nErkenntnisse werden zum Schluss zusammengefasst und zus\u00e4tzlich werden einige\nVerbesserungsm\u00f6glichkeiten genannt.\niiiDanksagung\nAn dieser Stelle m\u00f6chte ich mich zuerst bei Herrn Prof. Dr. Manfred Reichert f\u00fcr die\nBegutachtung dieser Bachelorarbeit herzlich bedanken. Zugleich geb\u00fchrt ein besonderer\nDank meinem Betreuer Marc Schickler , der mich jederzeit mit gro\u00dfer Hilfsbereitschaft\nunterst\u00fctzt hat.\nAu\u00dferdem m\u00f6chte ich mich bei Simon St\u00f6ferle undSophia St\u00f6ferle f\u00fcr das Korrekturle-\nsen recht herzlich bedanken.\nZuletzt gilt allen Studienteilnehmern/innen , die sich f\u00fcr die Teilnahme an der begleiten-\nden Studie bereit erkl\u00e4rt haben, gro\u00dfen Dank.\nvInhaltsverzeichnis\n1 Einleitung 1\n1.1 Ziel der Arbeit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\n1.2 Struktur der Arbeit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\n2 Grundlagen 3\n2.1 Tinnitus . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n2.1.1 Verhaltenstherapeutische Ans\u00e4tze . . . . . . . . . . . . . . . . . . 4\n2.1.2 Medikament\u00f6se Therapieans\u00e4tze . . . . . . . . . . . . . . . . . . . 4\n2.1.3 Tailor-Made Notched Music Training . . . . . . . . . . . . . . . . . 5\n2.1.4 Tinnitus-Retraining-Therapie . . . . . . . . . . . . . . . . . . . . . 5\n2.2 Virtuelle Realit\u00e4t . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n2.2.1 Google VR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n2.3 Spatial Audio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n2.3.1 Realisierung . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n3 Anforderungen 11\n3.1 Funktionale Anforderungen . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n3.1.1 Benutzerkonto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n3.1.2 \u00dcberblick . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n3.1.3 Anpassungsm\u00f6glichkeiten . . . . . . . . . . . . . . . . . . . . . . . 12\n3.1.4 Schwierigkeitsgrade . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n3.1.5 Richtungsh\u00f6ren . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n3.1.6 Erinnerungen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n3.2 Nicht-funktionale Anforderungen . . . . . . . . . . . . . . . . . . . . . . . 15\n3.2.1 Zuverl\u00e4ssigkeit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n3.2.2 Look & Feel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n3.2.3 Leistung und Ef\ufb01zienz . . . . . . . . . . . . . . . . . . . . . . . . . 16\n3.2.4 Sicherheit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n3.2.5 Of\ufb02ine Anwendung . . . . . . . . . . . . . . . . . . . . . . . . . . . 16\nviiInhaltsverzeichnis\n4 Architektur & Implementierung 17\n4.1 Konzept . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n4.2 Plattform & Werkzeuge . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n4.3 Datenmodell & Datenhaltung . . . . . . . . . . . . . . . . . . . . . . . . . 19\n4.4 Vorgehensweise . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22\n4.4.1 SplashScreen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22\n4.4.2 Login . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23\n4.4.3 Registrierung . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\n4.4.4 \u00dcberblick \u00fcber alle Aktivit\u00e4ten . . . . . . . . . . . . . . . . . . . . . 25\n4.4.5 Statistiken . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\n4.4.6 Benutzerpro\ufb01l . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\n4.4.7 Erinnerungen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n4.4.8 Anleitung . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n4.4.9 Einstellungsm\u00f6glichkeiten . . . . . . . . . . . . . . . . . . . . . . . 31\n4.4.10 Richtungsh\u00f6ren . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n4.5 Systemanforderungen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n4.6 Installation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n5 Anforderungsabgleich 37\n5.1 Funktionale Anforderungen . . . . . . . . . . . . . . . . . . . . . . . . . . 37\n5.1.1 Benutzerkonto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\n5.1.2 \u00dcberblick . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\n5.1.3 Anpassungsm\u00f6glichkeiten . . . . . . . . . . . . . . . . . . . . . . . 39\n5.1.4 Schwierigkeitsgrade . . . . . . . . . . . . . . . . . . . . . . . . . . 40\n5.1.5 Richtungsh\u00f6ren . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\n5.1.6 Erinnerungen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n5.2 Nicht-funktionale Anforderungen . . . . . . . . . . . . . . . . . . . . . . . 41\n5.2.1 Zuverl\u00e4ssigkeit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n5.2.2 Look & Feel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n5.2.3 Leistung und Ef\ufb01zienz . . . . . . . . . . . . . . . . . . . . . . . . . 42\n5.2.4 Sicherheit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n5.2.5 Of\ufb02ine Anwendung . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nviiiInhaltsverzeichnis\n6 Studie 45\n6.1 Aufbau . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n6.2 Ablauf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n6.3 Ergebnisse & Vergleich . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n6.3.1 Sitzungsdauer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n6.3.2 Winkelabweichung . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n6.4 Diskussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n6.4.1 Erkenntnisse . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n6.4.2 Schwachstellen der Studie . . . . . . . . . . . . . . . . . . . . . . 50\n7 Zusammenfassung 51\n7.1 Ausblick . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52\nA Quelltexte 59\nB Fragebogen der begleitenden Studie 63\nix1\nEinleitung\nDas menschliche Ohr ist ein vielseitiges Sinnesorgan, das sowohl die Verst\u00e4ndigung\nunter Menschen aber auch die r\u00e4umliche Orientierung durch auditive Wahrnehmung\nerm\u00f6glicht. Durch starke L\u00e4rmbelastung kann in vielen F\u00e4llen eine Erkrankung des Ohrs\nin Form von Tinnitus auftreten. Zwischen 5% und 15% der Gesamtbev\u00f6lkerung sind von\nTinnitus betroffen, wobei dieser bei rund 1% der Betroffenen eine exzessive Lautst\u00e4rke\nvorweist, welche die Lebensqualit\u00e4t erheblich beeintr\u00e4chtigt [1].\nMit Hilfe der mobilen Anwendung \u201eTrack your Tinnitus\u201c k\u00f6nnen Betroffene die individuel-\nlen Schwankungen ihrer Tinnituswahrnehmung erfassen. Mit einem Smartphone k\u00f6nnen\ndie Schwankungen des Tinnitus systematisch gemessen werden. Somit kann heraus-\ngefunden werden, wie diese mit dem Tagesablauf und den Aktivit\u00e4ten der Betroffenen\nzusammenh\u00e4ngen [ 2]. Die Anwendung wurde von der Tinnitus Research Initiative (TRI)\nin Kooperation mit dem Institut f\u00fcr Datenbanken und Informationssysteme der Universit\u00e4t\nUlm entwickelt und soll in Zukunft durch weitere Funktionalit\u00e4ten erg\u00e4nzt und verbessert\nwerden.\nBenutzer sollen in Zukunft die Tinnitus-Belastung spielerisch verbessern k\u00f6nnen. Als\nInspiration diente das Spiel \u201eAudio Defence: Zombie Arena\u201c, welches f\u00fcr die iOS Plattform\nerh\u00e4ltlich ist [ 3]. Hierbei verzichtet das Spiel komplett auf eine gra\ufb01sche Darstellung\nder sich n\u00e4hernden Gegner. Lediglich die Ger\u00e4usche aus dem Kopfh\u00f6rer verraten dem\nSpieler aus welcher Himmelsrichtung sich die Zombies langsam ann\u00e4hern, die es zu\nbezwingen gilt. Bereits im vergangenen Jahr wurden Anwendungen f\u00fcr die Plattformen\nAndroid, iOS, WindowsPhone und Web (HTML5) entwickelt, die dieses Konzept f\u00fcr\nmedizinische Zwecke verwenden [ 4,5,6,7]. Nun soll eine weitere Android Anwendung\nentwickelt werden, die dieses Konzept mit aktueller Technik realisiert.\n11 Einleitung\n1.1 Ziel der Arbeit\nDiese Arbeit besch\u00e4ftigt sich mit der Entwicklung einer medizinischen Anwendung f\u00fcr\nAndroid Smartphones, welche die Tinnitus-Belastung der betroffenen Personen spiele-\nrisch verbessert. Mit Hilfe der Google VR SDK werden Ger\u00e4usche in einem virtuellen\nRaum um den Spieler herum platziert, die \u00fcber Kopfh\u00f6rer wahrgenommen werden\nk\u00f6nnen [ 8]. Die Aufgabe des Spielers besteht darin die Richtung, aus der das Ger\u00e4usch\nkommt, zu lokalisieren. Durch gezielte auditive Stimulation soll der Tinnitus f\u00fcr kurze\nZeit vom Betroffenen nicht mehr wahrgenommen werden. F\u00fcr eine intuitive Bedienung\nwerden zur Positionsbestimmung die im Ger\u00e4t verbauten Sensoren verwendet, die\ndurch das Drehen und Neigen des Smartphones ein neuartiges Bedienkonzept erm\u00f6gli-\nchen [ 9]. F\u00fcr Abwechslung sorgen drei Schwierigkeitsgrade, sowie eine Auswahl von\nGer\u00e4usche-Themen und weitere Einstellungsm\u00f6glichkeiten.\nAlle erhobenen Daten werden im JSON-Format gespeichert, um die sp\u00e4tere Auswertung\nin einer begleitenden Studie zu erleichtern, in der die Anwendung mit anderen bereits\nexistierenden Anwendungen verglichen wird.\n1.2 Struktur der Arbeit\nDie vorliegende Arbeit ist in insgesamt sieben Kapitel unterteilt. Zu Beginn werden in\nKapitel 2 wichtige Grundlagen thematisiert, die im Laufe dieser Arbeit immer wieder\naufgegriffen werden. Anschlie\u00dfend wird in Kapitel 3 die Planungsphase des Projekts\ngenauer beschrieben, indem die Anforderungen, welchen die Anwendung entsprechen\nsoll, aufgef\u00fchrt und erl\u00e4utert werden. Kapitel 4 befasst sich mit der Architektur und der\nImplementierung der Anwendung. Im Anschluss wird in Kapitel 5 die implementierte\nAnwendung auf die Einhaltung der zuvor gestellten Anforderungen untersucht und\nbewertet. Der Aufbau, Ablauf sowie die Ergebnisse der begleitenden Studie werden\nin Kapitel 6 genauer beschrieben. Abschlie\u00dfend werden in Kapitel 7 die wesentlichen\nBestandteile dieser Arbeit zusammengefasst, gefolgt von einem Ausblick auf potentielle\nVerbesserungen und Erweiterungen der Anwendung.\n22\nGrundlagen\nIm Folgenden Kapitel werden grundlegende Aspekte, die f\u00fcr ein besseres Verst\u00e4ndnis\ndieser Arbeit beitragen, n\u00e4her erl\u00e4utert. Da die entstandene Anwendung sich auf die\nZielgruppe der von Tinnitus betroffenen Menschen spezialisiert, wird daher zun\u00e4chst\ndie Geh\u00f6rerkrankung selbst thematisiert. Daraufhin besch\u00e4ftigt sich dieses Kapitel\nmit der virtuellen Realit\u00e4t, die sich seit einigen Jahren immer mehr und mehr zum\nMassenph\u00e4nomen entwickelt. Zus\u00e4tzlich werden die in der Anwendung verwendeten\nKomponenten zur Realisierung der virtuellen Realit\u00e4t genannt und beschrieben.\n2.1 Tinnitus\nEin Tinnitus (lat. f\u00fcr \u201eOhrenklingen\u201c) ist ein Symptom f\u00fcr eine Erkrankung des Geh\u00f6rs\nund beschreibt die Wahrnehmung von Ger\u00e4uschen, deren Herkunft nicht auf eine \u00e4u\u00dfere\nphysikalische Schallquelle zur\u00fcckzuf\u00fchren sind [ 10]. In Deutschland leiden etwa 4% der\nBev\u00f6lkerung unter Tinnitus, wobei dieser bei rund 15% zu weiteren Begleitsymptomen\nwie Schlafst\u00f6rungen, Konzentrationsst\u00f6rungen oder \u00dcberemp\ufb01ndlichkeit f\u00fcr laute Ge-\nr\u00e4usche f\u00fchrt. In diesem Fall spricht man auch von einem dekompensierten Tinnitus.\nDie Ger\u00e4usche werden von den Betroffenen Personen als sehr hohe T\u00f6ne in Form\nvon Piepsen, Pfeifen oder auch Zischen sowohl einseitig, als auch auf beiden Ohren\nwahrgenommen [11].\nIn der Medizin unterscheidet man zwischen dem subjektiven undobjektiven Tinnitus.\nDer objektive Tinnitus ist strenggenommen kein Tinnitus, da die wahrgenommenen\nakustischen Signale durch den Organismus der betroffenen Personen erzeugt werden.\n32 Grundlagen\nDieser tritt aber nur bei weit weniger als 0,1% der Tinnitusbetroffenen auf und kann\nbeispielsweise mit einem Stethoskop \u00fcber dem Kopf oder Geh\u00f6rgang vom Arzt geh\u00f6rt\nwerden. Verursacht wird der objektive Tinnitus zum Beispiel durch einen Tumor oder\ndurch das Zucken der Muskeln der Geh\u00f6rkn\u00f6chelchen. In den meisten F\u00e4llen kann\ndiese Art von Tinnitus durch medikament\u00f6se Behandlung oder eine Operation behandelt\nwerden [12, 13].\nDer subjektive Tinnitus ist die am meisten diagnostizierte Form von Tinnitus und tritt in\nder Regel mit einer H\u00f6rst\u00f6rung auf. Die wahrgenommenen Ger\u00e4usche sind nicht auf\neine \u00e4u\u00dfere Schallquelle zur\u00fcckzuf\u00fchren. H\u00e4u\ufb01g werden diese durch eine \u00dcberaktivit\u00e4t\nvon Nervenzellen ausgel\u00f6st und aufrechterhalten [ 13]. Bei akutem Tinnitus kann das\nGer\u00e4usch sowohl nur wenige Minuten lang aber auch \u00fcber mehrere Wochen hinweg von\nden Betroffenen wahrgenommen werden, bevor es selbstst\u00e4ndig verschwindet. Sobald\ndas Ger\u00e4usch nach drei Monaten immer noch wahrgenommen wird, ist vom chronischen\nTinnitus die Rede. Die dauerhafte Heilung eines chronischen Tinnitus ist bisher nicht\nm\u00f6glich, dieser kann jedoch durch verschiedene Therapien behandelt werden [10].\n2.1.1 Verhaltenstherapeutische Ans\u00e4tze\nDurch das gezielte Aufarbeiten, \u00dcberpr\u00fcfen und Bewerten von Sachverhalten soll diese\nArt von Therapie letztendlich zu einer positiven Ver\u00e4nderung des konkreten Verhaltens\nf\u00fchren. Ein bekannter Ansatz ist die Kognitive Verhaltenstherapie, die sich mit den\nEinstellungen und Gedanken der Patienten im Hinblick auf die Krankheit besch\u00e4ftigt [ 14].\n2.1.2 Medikament\u00f6se Therapieans\u00e4tze\nDurch medikament\u00f6se Behandlung kann der Tinnitus reduziert werden, jedoch haben\nsich diese Therapien wegen erheblichen Nebenwirkungen nicht durchgesetzt [12].\n42.2 Virtuelle Realit\u00e4t\n2.1.3 Tailor-Made Notched Music Training\nEine Musiktherapie, bei der die Frequenz des Tinnitus bestimmt wird, die dann aus der\nLieblingsmusik der Patienten herausge\ufb01ltert und ver\u00e4ndert wird. Diese Musik muss vom\nPatienten \u00fcber mehrere Stunden am Tag geh\u00f6rt werden. Erste Untersuchungen f\u00fchrten\nbei einigen Patienten zu einer Verbesserung der Tinnitus-Belastung [15].\n2.1.4 Tinnitus-Retraining-Therapie\nMit Hilfe von Rauschgeneratoren oder anderen Umweltger\u00e4uschen soll ein Zustand\nerreicht werden, in dem der Betroffene den Tinnitus nicht mehr bewusst wahrnimmt.\nDiese Art von Therapie relativiert den Begriff Heilung (Abwesenheit von Tinnitus) und\nf\u00fchrte sogar zum kompletten Verschwinden des bisher chronischen Tinnitus [16].\nDie Anwendung, die in dieser Arbeit entsteht, besch\u00e4ftigt sich mit dem Ansatz der\nTinnitus-Retraining-Therapie in Kombination mit virtueller Realit\u00e4t.\n2.2 Virtuelle Realit\u00e4t\nDer Begriff virtual reality (VR) (engl. f\u00fcr \u201evirtuelle Realit\u00e4t\u201c) steht f\u00fcr eine computergene-\nrierte virtuelle Umgebung, die gleichzeitig als Benutzerober\ufb02\u00e4che fungiert. Der Benutzer\nkann eine Anwendung innerhalb der virtuellen Umgebung steuern und sich im Idealfall\nso wie in seiner bekannten Umgebung verhalten [17].\nH\u00e4u\ufb01g werden sogenannte Head-Mounted Displays als Ausgabeger\u00e4te verwendet, die\nvom Benutzer auf dem Kopf getragen werden und die durch eingebaute Sensoren das\nErfassen der Kopfbewegungen (Head-Tracking) erm\u00f6glichen. Somit kann die virtuelle\nUmgebung je nach Position des Kopfes angepasst und ver\u00e4ndert werden. Die virtuelle\nUmgebung muss f\u00fcr beide Augen separat berechnet werden, da diese durch die un-\nterschiedlichen Blickwinkel verschiedene Bilder wahrnehmen, die im Gehirn zu einem\nGesamtbild zusammengesetzt werden (Binocular Rendering). Dadurch wird eine deutlich\n52 Grundlagen\nh\u00f6here Rechenleistung ben\u00f6tigt, die meist von einem externen Computer \u00fcbernommen\nwird.\nEin \u00e4hnliches Prinzip wird auch bei der Google Cardboard VR-Brille verfolgt, die Aus-\ngabe und Berechnung der virtuellen Umgebung vereint [ 18]. Die Brille an sich dient als\nHalterung f\u00fcr Smartphones, die aus Karton besteht und zwei Linsen sowie einen Magnet-\nschalter vorweist (siehe Abbildung 2.1). Die ins Cardboard eingesetzten Smartphones\n\u00fcbernehmen die Ausgabe und Berechnung der virtuellen Umgebung. Das Head-Tracking\nerfolgt \u00fcber die Verwendung der im Ger\u00e4t verbauten Sensoren. \u00dcber den Magnetfeld-\nsensor erkennt das Ger\u00e4t, ob der Benutzer den Magnetschalter bet\u00e4tigt. Sowohl die\nAnwendungen als auch die Smartphones m\u00fcssen bestimmte Kriterien erf\u00fcllen, damit\ndiese f\u00fcr Google Cardboard verwendet werden k\u00f6nnen. Neben den ben\u00f6tigten Sensoren\nsollten die Ger\u00e4te eine hohe Rechenleistung vorweisen, damit eine \ufb02\u00fcssige Wiedergabe\nder VR-Inhalte m\u00f6glich ist.\nAbbildung 2.1: Google Cardboard [19]\nF\u00fcr die Entwicklung von VR-Anwendungen gibt es eine Vielzahl an verschiedenen\nFrameworks. Bekannte Vertreter in diesem Genre sind die zwei Gra\ufb01k-Engines Unity3D\nsowie Unreal Engine , die f\u00fcr die Entwicklung von Spielen auf mehreren Plattformen\nverwendet werden [ 20,21]. Die in dieser Arbeit entwickelte Anwendung verwendet\njedoch die Programmierschnittstelle Google VR , welche im folgenden Abschnitt erl\u00e4utert\nwird.\n62.3 Spatial Audio\n2.2.1 Google VR\nMit der Programmierschnittstelle Google VR k\u00f6nnen Entwickler auf ein modernes und\numfangreiches Framework zur\u00fcckgreifen, welches die von Google Cardboard ben\u00f6tigten\nAnforderungen abwickelt [ 8]. Die Schnittstelle wird neben den Plattformen Android\nund iOs auch f\u00fcr die Gra\ufb01k-Engines Unity3D und Unreal Engine bereitgestellt. Mit\nHilfe verschiedener UI-Komponenten k\u00f6nnen Entwickler einfache VR-Anwendungen,\nbeispielsweise zur Betrachtung von 360 Grad Panoramabildern oder Videos, erstellen.\nIn Kombination mit der Gra\ufb01k-Pipeline OpenGL ES k\u00f6nnen auch virtuelle Umgebungen\nerstellt werden [22].\nDurch die Verwendung der zus\u00e4tzlich bereitgestellten 3D-Audio Komponente kann die\nAufmerksamkeit des Benutzers gezielt durch auditive Stimulation kontrolliert werden.\nDiese Komponente ist essenzieller Bestandteil der in dieser Arbeit entstandenen Anwen-\ndung und wird nun im folgenden Abschnitt thematisiert.\n2.3 Spatial Audio\nDieGvrAudioEngine ist eine Audio-Rendering-Engine, die f\u00fcr mobile virtuelle Realit\u00e4t\noptimiert und Bestandteil der Google VR Schnittstelle ist. Ziel der Engine ist es dem\nZuh\u00f6rer ein realistisches r\u00e4umliches H\u00f6rerlebnis (engl. \u201eSpatial Audio\u201c) zu bieten, indem\nman repliziert, wie Schallwellen mit der Umgebung und dem Kopf und den Ohren des\nZuh\u00f6rers in Wechselwirkung treten. Die in diesem Abschnitt diskutierte Thematik kann\naus der englischen Dokumentation von Google VR entnommen werden [23].\nDurch die r\u00e4umliche Platzierung von Ger\u00e4uschen erh\u00e4lt der Benutzer auditive Signale,\ndie ihn dazu verleiten sollen in eine bestimmte Richtung zu blicken. Damit die Illusion\nder virtuellen Welt nicht durch fehlerhafte Wahrnehmung zerbricht, verwendet die Audio-\nEngine drei wesentliche Techniken zur Simulierung des r\u00e4umlichen H\u00f6rerlebnisses.\nInteraurale Zeitunterschiede Durch eine zeitversetzte Wiedergabe der am Ohr ein-\ntreffenden Schallwellen kann der Benutzer erkennen, aus welcher Richtung diese im\n72 Grundlagen\nVerh\u00e4ltnis zur Position des Kopfes kommen. Die Zeitspanne h\u00e4ngt stark davon ab, wie\nweit die Schallquelle von der linken oder rechten Seite des Kopfes platziert ist.\nInteraurale Volumenunterschiede F\u00fcr Frequenzen \u00fcber etwa 1,5 kHz werden vom\nMenschen Volumenunterschiede zwischen den Ohren wahrgenommen, die zur Be-\nstimmung der Richtung der Schallwellen beitragen. Diese Technik wird von Menschen\nverwendet, wenn die Quelle h\u00f6herer Frequenzen auf einer Seite des Kopfes liegt. Das\nOhr auf der anderen Seite liegt dadurch im akustischen Schatten, der das Erkennen der\nAnkunftszeit unm\u00f6glich macht.\nSpektral\ufb01lterung T\u00f6ne aus verschiedenen Richtungen springen in unterschiedlicher\nWeise auf die Innenseite der Ohrmuschel. Dadurch werden die Klangfrequenzen in\nAbh\u00e4ngigkeit von der Richtung des Tons modi\ufb01ziert. Menschen verwenden die \u00c4nderung\nder Frequenz um die Herkunft des Tones aus\ufb01ndig zu machen.\n2.3.1 Realisierung\nAbbildung 2.2: Ambisonics-Technologie [23]\nF\u00fcr die Simulation der r\u00e4umlichen Akustik wird die sogenannte Ambisonics-Technologie\nverwendet, die den Kopf des Benutzers mit einem virtuellen kugelf\u00f6rmigen Klangk\u00f6r-\nper umh\u00fcllt. Durch die Platzierung mehrerer virtueller Lautsprecher innerhalb dieses\n82.3 Spatial Audio\nKlangk\u00f6rpers k\u00f6nnen Schallwellen aus beliebiger Richtung reproduziert werden (siehe\nAbbildung 2.2). Die Genauigkeit der synthetisierten Schallwellen h\u00e4ngt dabei von der\nAnzahl der virtuellen Lautsprecher ab. Durch Head-Tracking werden die virtuellen Laut-\nsprecher so verschoben, dass die Schallwellen vom Benutzer immer von der gleichen\nRichtung wahrgenommen werden.\nDie Re\ufb02exion der Schallwellen an verschiedenen Ober\ufb02\u00e4chen wird ebenfalls von der\nAudio-Engine ber\u00fccksichtigt, indem diese in drei Komponenten aufgeteilt werden. Die\nerste Komponente besteht aus der Schallwelle die auf direktem Weg von der Quelle am\nOhr des Benutzers eintrifft (siehe Abbildung 2.3). Dabei ver\u00e4ndert sich die Lautst\u00e4rke\ndes Tons in Abh\u00e4ngigkeit von der Distanz zwischen Benutzer und Schallquelle.\nAbbildung 2.3: Re\ufb02exion von Schallwellen in der virtuellen Umgebung [23]\nRe\ufb02ektierte Schallwellen, die fr\u00fch am Ohr des Benutzers eintreffen, bilden die zweite\nKomponente, die dem Benutzer einen Eindruck \u00fcber die Gr\u00f6\u00dfe und Form des Raumes\nvermitteln. Diese Re\ufb02exionen werden in Echtzeit berechnet, indem f\u00fcr jede Re\ufb02exion\neine neue Schallquelle erstellt wird. Mit Hilfe einer leistungsstarken Hall-Engine k\u00f6nnen\nweitere Re\ufb02exionen in Echtzeit berechnet werden, die sich immer mehr und mehr ver-\ndichten, bis die einzelnen Schallwellen vom Benutzer nicht mehr unterschieden werden\nk\u00f6nnen. Diese Schallwellen bilden die dritte Komponente. Ver\u00e4ndert sich die Gr\u00f6\u00dfe\n92 Grundlagen\ndes Raumes oder die Ober\ufb02\u00e4chenmaterialien der W\u00e4nde, werden die Schallwellen in\nEchtzeit an die neuen Bedingungen angepasst.\nSobald sich ein virtuelles Objekt zwischen Schallquelle und Benutzer be\ufb01ndet, werden\ndie Frequenzen von der Audio-Engine so ver\u00e4ndert, dass hohe Frequenzen mehr als\nniedrige Frequenzen vom Objekt blockiert werden.\n103\nAnforderungen\nIm folgenden Teil werden die Anforderungen, welchen die Anwendung entsprechen\nsoll, aufgef\u00fchrt und erl\u00e4utert. Hierbei wird zwischen funktionalen (Was soll umgesetzt\nwerden?) und nicht-funktionalen (Wie / unter welchen Rahmenbedingungen bzw. Quali-\nt\u00e4tskriterien?) Anforderungen unterschieden.\n3.1 Funktionale Anforderungen\nDie funktionalen Anforderungen an die Anwendung wurden w\u00e4hrend der Planungsphase\nso gew\u00e4hlt, dass die Anwendung f\u00fcr die von Tinnitus betroffenen Personen von Nutzen\nsein kann. Ein besonderer Wert wurde deshalb vor allem auf die Benutzerverwaltung\nsowie die auditive Stimulation in Form von Richtungsh\u00f6ren gelegt, welche nun genauer\nerl\u00e4utert werden.\n3.1.1 Benutzerkonto\nDamit ein Benutzer die Anwendung im vollen Umfang nutzen kann, soll er zun\u00e4chst\nein Benutzerkonto anlegen k\u00f6nnen, welches lokal auf dem Ger\u00e4t gespeichert wird.\nF\u00fcr die Registrierung werden pers\u00f6nliche Daten wie Vor-/Nachname, Geburtsdatum,\nGeschlecht, sowie E-Mail Adresse der Person ben\u00f6tigt. Um unbefugten Zugriff auf diese\nDaten zu verhindern, ben\u00f6tigt jeder Benutzer ein eigenes Passwort, welches nur in\nkryptischer Form vorliegen soll. Im Falle, dass ein Benutzer sein Passwort vergessen\nhaben sollte, gibt es die M\u00f6glichkeit das Passwort zur\u00fcck zu setzen. Au\u00dferdem soll das\nPasswort in der Anwendung ge\u00e4ndert werden k\u00f6nnen. Jedes Benutzerkonto speichert\n113 Anforderungen\nden Verlauf aller vergangenen Sitzungen, damit der Benutzer jederzeit auf vergangene\nSitzungen zur\u00fcckgreifen kann.\nDie Anwendung soll au\u00dferdem die Verwendung mehrerer Benutzerkonten auf einem\nGer\u00e4t verwalten k\u00f6nnen. Die Benutzerkonten sollen in Form von Json-Dateien persistent\nauf dem Ger\u00e4t gespeichert werden die nur vom jeweiligen Benutzer zug\u00e4nglich sind.\nDie Datei soll vom Benutzer per Export-/Share-Funktion f\u00fcr andere Anwendungen\nbzw. Benutzer freigegeben werden k\u00f6nnen. Eine Import-Funktion soll im Falle von\nDatenverlust das Einspielen von Backups erm\u00f6glichen.\n3.1.2 \u00dcberblick\nDie Anwendung soll jedem Benutzer einen \u00dcberblick \u00fcber seine Aktivit\u00e4ten bieten.\nHierbei soll ein Verlauf aller vergangenen Sitzungen in Form einer Liste f\u00fcr den Benutzer\nleicht zug\u00e4nglich sein. Der Verlauf soll vom Benutzer manipulierbar sein, d.h. es k\u00f6nnen\neinzelne/mehrere Sitzungen gel\u00f6scht, geteilt, sowie exportiert und importiert werden.\nZus\u00e4tzlich soll die Liste nach Datum, Sitzungsdauer, Rundenanzahl, Trefferanzahl,\nFehleranzahl und Schwierigkeitsgrad sowohl aufsteigend als auch absteigend sortiert\nwerden k\u00f6nnen. Au\u00dferdem sollen Statistiken, die sich auf alle erfolgreich beendeten\nSitzungen beziehen, dem Benutzer einen \u00dcberblick \u00fcber seinen Fortschritt geben.\n3.1.3 Anpassungsm\u00f6glichkeiten\nBevor ein Benutzer seine F\u00e4higkeiten im Richtungsh\u00f6ren unter Beweis stellen kann, soll\neine Anleitung das weitere Vorgehen genauer erl\u00e4utern. Hierbei sollen Einstellungen\nvorgenommen werden k\u00f6nnen, die Ein\ufb02uss auf die n\u00e4chste Sitzung haben (siehe Tabelle\n3.1). Neben der Rundenanzahl k\u00f6nnen Toleranzbereich sowie Schwierigkeitsgrad vom\nBenutzer gew\u00e4hlt werden. F\u00fcr Abwechslung soll eine Auswahl verschiedener Ger\u00e4usche\nsorgen und au\u00dferdem soll die Lautst\u00e4rke anpassbar sein. F\u00fcr eine bessere Orientierung\nsoll die Bildschirmwiedergabe eines virtuellen Raums, dessen Bodenfarbe ebenfalls\nvom Benutzer w\u00e4hlbar ist, sorgen.\n123.1 Funktionale Anforderungen\nDie Einstellungen sollen persistent gespeichert werden, um eine sp\u00e4tere Wiederver-\nwendung zu erm\u00f6glichen. Der Benutzer soll au\u00dferdem die M\u00f6glichkeit haben, die\ngespeicherten Einstellungen erneut anzupassen.\nEinstellung Beschreibung\nRundenanzahl Die Anzahl der Runden, die in einer Sitzung durchlaufen wer-\nden\nToleranz Der Toleranzbereich (in Grad) in dem ein Treffer g\u00fcltig ist\nSchwierigkeitsgrad Der Schwierigkeitsgrad der das Richtungsh\u00f6ren erleichtern\nbzw. erschweren soll\nGer\u00e4usche-Thema Eine Kollektion aus zusammengeh\u00f6rigen Ger\u00e4uschen\nLautst\u00e4rke Die Lautst\u00e4rke der Ger\u00e4usche\nVirtueller Raum Es wird ein virtueller Raum auf dem Bildschirm gezeichnet,\ndamit der Benutzer sich besser orientieren kann\nBodenfarbe Die Farbe des Bodens im virtuellen Raum\nTabelle 3.1: Einstellungsm\u00f6glichkeiten f\u00fcr das Richtungsh\u00f6ren\n3.1.4 Schwierigkeitsgrade\nDas Richtungsh\u00f6ren in Soda soll in drei Schwierigkeitsgraden erfolgen (siehe Tabelle\n3.2). Damit wird je nach Schwierigkeitsgrad das Richtungsh\u00f6ren f\u00fcr den Benutzer\nerleichtert bzw. erschwert. Der Benutzer kann somit anhand seiner F\u00e4higkeiten einen\npassenden Schwierigkeitsgrad w\u00e4hlen, um das Richtungsh\u00f6ren optimal zu trainieren.\nDer leichte Schwierigkeitsgrad soll Einsteiger motivieren sich mehr mit der Anwendung\nzu befassen. Dabei soll vom Benutzer nur ein Ger\u00e4usch wahrgenommen werden, dessen\nRichtung der Benutzer \ufb01nden soll. F\u00fcr erfahrene Benutzer sorgt der Schwierigkeitsgrad\n\u201enormal\u201c mit der zus\u00e4tzlichen Wiedergabe eines Hintergrundger\u00e4usches f\u00fcr Ablenkung.\n133 Anforderungen\nExperten sollen sich am schweren Schwierigkeitsgrad mit der zus\u00e4tzlichen Wiedergabe\nvon zwei Hintergrundger\u00e4uschen messen k\u00f6nnen.\nSchwierigkeitsgrad Beschreibung\nLeicht Es wird ein Ton abgespielt, dessen Richtung der Benutzer\n\ufb01nden soll.\nNormal Es werden zwei T\u00f6ne gleichzeitig abgespielt, wobei der Be-\nnutzer die Richtung eines Tones \ufb01nden soll\nSchwer Es werden drei T\u00f6ne gleichzeitig abgespielt, wobei der Benut-\nzer die Richtung eines Tones \ufb01nden soll\nTabelle 3.2: Schwierigkeitsgrade f\u00fcr das Richtungsh\u00f6ren\n3.1.5 Richtungsh\u00f6ren\nDie Hauptfunktionalit\u00e4t der Anwendung ist die auditive Stimulation in der gleichzeitig\ndas Richtungsh\u00f6ren getestet wird. Hierbei sollen die Einstellungen (siehe Abschnitt\n3.1.3) verwendet werden, die der Benutzer im Vorhinein festgelegt hat. Der Benutzer\nsoll mittels Kopfh\u00f6rern je nach Schwierigkeitsgrad einen oder mehrere Ger\u00e4usche\nwahrnehmen. W\u00e4hrend der Wiedergabe der Ger\u00e4usche soll die Anwendung in kurzen\nAbst\u00e4nden (z.B. alle 100ms) die Drehung des Benutzers in Grad speichern. Somit kann\nsp\u00e4ter \u00fcberpr\u00fcft werden ob der Benutzer Probleme beim Orten des Ger\u00e4uschs hatte.\nNachdem der Benutzer sich in die Richtung gedreht hat, aus der er das Ger\u00e4usch\nwahrnimmt, soll er mit Hilfe des Cardboard-Buttons (physischer Knopf am Cardboard)\ndie Richtung best\u00e4tigen k\u00f6nnen. Sollte kein Cardboard zur Verf\u00fcgung stehen muss\ndie Best\u00e4tigung mit einer Ber\u00fchrung auf dem Bildschirm erfolgen. Danach \ufb01ndet die\nAuswertung der Runde statt und der Benutzer soll ein Feedback \u00fcber die Abweichung\nzur Schallquelle bekommen. Nachdem alle Runden erfolgreich absolviert wurden, wird\ndie auditive Stimulation beendet und der Benutzer hat die M\u00f6glichkeit die Statistiken zur\nbeendeten Sitzung einzusehen.\n143.2 Nicht-funktionale Anforderungen\n3.1.6 Erinnerungen\nUm die F\u00e4higkeiten im Richtungsh\u00f6ren besser trainieren zu k\u00f6nnen, sollten Benutzer\ndie Anwendung in regelm\u00e4\u00dfigen Abst\u00e4nden verwenden. Deshalb soll die Anwendung\ndie M\u00f6glichkeit bieten einen Erinnerungs-Dienst einzurichten, der den Benutzer benach-\nrichtigt, wenn eine weitere Sitzung f\u00e4llig ist. Dabei kann der Benutzer den Tag und die\nUhrzeit w\u00e4hlen, an dem er benachrichtigt werden m\u00f6chte. Au\u00dferdem ist es m\u00f6glich die\nBenachrichtigungen t\u00e4glich und w\u00f6chentlich zu wiederholen, wobei die Anzahl der Ta-\nge/Wochen frei w\u00e4hlbar ist. Die Benachrichtigung erfolgt sowohl per E-Mail als auch lokal\nauf dem Ger\u00e4t und beide Varianten k\u00f6nnen beliebig aktiviert bzw. deaktiviert werden.\n3.2 Nicht-funktionale Anforderungen\nDie Anwendung soll verschiedenen Qualit\u00e4tskriterien entsprechen, die allgemein auch\nals nicht-funktionale Anforderungen bekannt sind. Dabei handelt es sich um Rahmenbe-\ndingungen, die die Anwendung einhalten soll um dem Benutzer ein problemloses und\nfrustfreies Erlebnis bieten zu k\u00f6nnen.\n3.2.1 Zuverl\u00e4ssigkeit\nDie Anwendung soll selbst dann noch funktionieren, wenn unvorhergesehene Eingaben\noder Fehler in der Software auftreten. Im Falle eines Fehlers sollen alle Benutzerdaten\nwieder herstellbar sein, welche beim Neustart der Anwendung neu geladen werden. Wer-\nden Daten besch\u00e4digt, hat der Benutzer die M\u00f6glichkeit ein Backup des Benutzerkontos\nzu importieren.\n3.2.2 Look & Feel\nUm eine gute Usability zu erreichen soll die gra\ufb01sche Ober\ufb02\u00e4che der Anwendung sich\nam Designkonzept von Material Design orientieren. Somit soll gew\u00e4hrleistet werden,\n153 Anforderungen\ndass Benutzer durch eine vertraute gra\ufb01sche Darstellung die Anwendung intuitiv be-\ndienen k\u00f6nnen. Au\u00dferdem sollen Animationen das Look & Feel abrunden, sodass die\nAnwendung f\u00fcr die Benutzer ansprechender wirkt.\n3.2.3 Leistung und Ef\ufb01zienz\nDurch optimierte Ladevorg\u00e4nge sollen kurze Ladezeiten erreicht werden, die wiederum\neine schnelle Bedienung erm\u00f6glichen. Das selbe Kriterium soll auch f\u00fcr alle Speicher-\nvorg\u00e4nge gelten.\n3.2.4 Sicherheit\nPassw\u00f6rter sollen ausschlie\u00dflich in kryptischer Form vorliegen, so dass zu keiner Zeit\ndas Passwort eines Benutzers aus einer Datei ausgelesen werden kann. Somit sollen\nBenutzerdaten vor unbefugtem Zugriff gesch\u00fctzt werden.\n3.2.5 Of\ufb02ine Anwendung\nDie Anwendung soll ohne jegliche Verbindung zum Internet funktionieren und somit\nalle Daten auf dem Ger\u00e4t speichern. Es soll lediglich f\u00fcr das Senden von E-Mails die\nInternet-Schnittstelle angesprochen werden.\n164\nArchitektur & Implementierung\nIm Folgenden werden die Zusammenh\u00e4nge zwischen den eingesetzten Hard- und Soft-\nwarekomponenten der Anwendung genauer beschrieben. Hierbei werden auch Aspekte\nder dazugeh\u00f6rigen Implementierung genannt und erl\u00e4utert. Au\u00dferdem werden Design-\nentscheidungen, die w\u00e4hrend der Implementierung zu treffen wahren, herausgestellt\nund genauer erkl\u00e4rt. Anhand einer Gegen\u00fcberstellung von Mockups und Screenshots\nder fertigen Anwendung sollen die Designentscheidungen besser verdeutlicht werden.\nDa die Anwendung spezielle Soft- und Hardwarekomponenten ben\u00f6tigt, werden zum\nSchluss die Systemanforderungen geschildert.\nSODA\nText \nMail\nSoda \nSMTP \nServer\nUser \nMail \nServer\n...\nGson\nText \nMail\nJava \nMail\nAbbildung 4.1: Software-Architektur der Anwendung\n174 Architektur & Implementierung\n4.1 Konzept\nSoda (Sound Origin Direction Application) ist eine mobile medical App, die sich an\nPersonen richtet, deren Geh\u00f6r durch Tinnitus beeintr\u00e4chtigt wird. Die App soll es Benut-\nzern erm\u00f6glichen ihr Geh\u00f6r spielerisch zu trainieren, indem sie sich auf ein bestimmtes\nGer\u00e4usch konzentrieren. Je nach Schwierigkeitsgrad sollen neben dem zu ortenden\nGer\u00e4usch zus\u00e4tzliche Hintergrundger\u00e4usche wahrgenommen werden. Alle Ger\u00e4usche\nwerden in einem virtuellen Raum zuf\u00e4llig um den Benutzer herum platziert (siehe Abbil-\ndung 4.2).\nGer\u00e4usch \n#1\nGer\u00e4usch \n#2\nGer\u00e4usch \n#3\nSichtbarer\nBereich\nAbbildung 4.2: Konzept der Anwendung\nDie Aufgabe des Benutzers besteht darin die Richtung, aus der das Ger\u00e4usch kommt,\ndurch eine Drehung mit dem Smartphone in der Hand zu lokalisieren. Um dies zu\nerm\u00f6glichen ver\u00e4ndert sich das Ger\u00e4usch immer in Relation zur aktuellen Blickrichtung\ndes Benutzers. Nimmt der Benutzer das Ger\u00e4usch zum Beispiel auf dem rechten Ohr\nwahr, muss er sich so weit nach rechts drehen bis das Ger\u00e4usch auf beiden Ohren\n184.2 Plattform & Werkzeuge\nwahrnehmbar ist und somit vor ihm liegt. Falls der Benutzer sich zu weit dreht, nimmt er\ndas Ger\u00e4usch nur noch auf dem linken Ohr wahr.\nDas Richtungsh\u00f6ren des Benutzers wird \u00fcber mehrere Runden getestet, wobei die\nRundenanzahl vom Benutzer selbst gew\u00e4hlt werden kann. Mit einer Ber\u00fchrung auf dem\nBildschirm oder mit der Verwendung des Cardboard Magnetbutton wird die aktuelle\nRunde beendet und ausgewertet. Nach jeder Runde wird dem Benutzer die eigentliche\nPosition des Ger\u00e4uschs durch ein gra\ufb01sches Objekt auf dem Bildschirm angezeigt.\nDurch auditives Feedback erf\u00e4hrt der Benutzer au\u00dferdem, ob er im zuvor gew\u00e4hlten\nToleranzbereich (Abweichung in Grad zum Ger\u00e4usch) gewesen ist.\nAlle erhobenen Daten werden im JSON-Format gespeichert und sind zu jeder Zeit in der\nAnwendung zug\u00e4nglich. Anhand dieser Daten k\u00f6nnen Statistiken erstellt werden, die\ndem Benutzer einen \u00dcberblick \u00fcber seine Aktivit\u00e4ten geben.\n4.2 Plattform & Werkzeuge\nSoda ist eine native Android Anwendung, die speziell f\u00fcr Smartphones entwickelt wurde.\nDie Anwendung wurde mit Hilfe von Android Studio 2.2.x inJava 1.8 implementiert\nund getestet. Zur Versionsverwaltung wurde ein GitHub gehostetes private Repository\nverwendet. F\u00fcr Tests wurde zuerst emulierte Hardware verwendet, sp\u00e4ter dann reale\nHardware, da Sensoren ben\u00f6tigt worden sind.\n4.3 Datenmodell & Datenhaltung\nAbbildung 4.3 zeigt die Realisierung der Datenbasis der Anwendung. Alle Daten werden\nauf dem Ger\u00e4t mit unterschiedlichen Methoden, welche von der Android Plattform bereit-\ngestellt werden, persistent gespeichert. Die Klasse User beinhaltet alle Benutzerdaten,\nsowie einen Verlauf aller vergangenen Sitzungen und bildet somit die zentrale Instanz\nder Anwendung. Die Klassen Reminder undVrSettings sind bewusst nicht mit in die\nUser-Klasse integriert, da User\u2013Objekte als Json-Datei exportiert werden k\u00f6nnen. Somit\n194 Architektur & Implementierung\nsoll die Json-Datei nur wesentliche Daten enthalten, die bei einer sp\u00e4teren Auswertung\nvon Nutzen sind. Aufgrund dieser Entscheidung werden Reminder- und VrSettings-\nObjekte als Json-String in den SharedPreferences, einem Key-Value Store, gespeichert.\nDie Anwendung erm\u00f6glicht es au\u00dferdem mehrere Benutzerkonten auf einem Ger\u00e4t zu\nerstellen und verwalten. Somit kann die Anzahl der ben\u00f6tigten Ger\u00e4te f\u00fcr eine potentielle\nStudie minimiert werden.\nF\u00fcr das Speichern und Laden von Dateien wurde die Klasse FileUtil implementiert,\ndie alle Speicher- und Ladevorg\u00e4nge asynchron abwickelt. Alle Dateien werden im\nJson-Format gespeichert, um den Ex- und Import von Benutzerkonten und Verl\u00e4ufen als\nJson-Datei zu vereinfachen. Hierf\u00fcr wurde die von Google bereitgestellte Gson-API in\ndie Anwendung integriert, die eine einfache Konvertierung von Java-Objekten in Json\nund zur\u00fcck mit Hilfe der Java Re\ufb02ection API erm\u00f6glicht [24].\nDie Anwendung unterst\u00fctzt zus\u00e4tzlich zum Ex- und Import das Teilen von Benutzerkonten\nund Verl\u00e4ufen. Hierf\u00fcr wird die Klasse FileProvider ben\u00f6tigt, da Benutzerkonten\nimInternen Speicher gespeichert werden und diese f\u00fcr andere Anwendungen nicht\nsichtbar bzw. zug\u00e4nglich sind. Damit externe Anwendungen Zugriff auf diese Daten\nerhalten wird zuerst mit Hilfe des FileUtils eine tempor\u00e4re Datei erstellt. Der FileProvider\nerstellt dann f\u00fcr diese Datei eine content://Uri , die dann per Intent an andere\nAnwendungen weitergeleitet werden kann und diese Zugriff auf die Datei erhalten. Somit\nk\u00f6nnen beispielsweise Benutzerkonten schnell und bequem als Json-Datei mit Hilfe von\nCloud-Diensten gesichert werden.\nUm Fehler und unvorhergesehene Abst\u00fcrze aufgrund von Dateninkonsistenz vorzubeu-\ngen, werden in Soda alle Daten die durch den Benutzer eingegeben werden \u00fcberpr\u00fcft.\nHierf\u00fcr wurde die Klasse InputManager implementiert, die eine asynchrone \u00dcberpr\u00fc-\nfung der Daten erm\u00f6glicht. Sollten Daten inkonsistent sein, wird am dazugeh\u00f6rigen\nEingabefeld die passende Fehlermeldung ausgegeben.\n204.3 Datenmodell & Datenhaltung\n  \n- \nstartTime \n: \nDate\n  \n- \nendTime \n: \nDate\n  \n- \nrounds \n: \nInteger\n  \n- \nmainNoise \n: \nNoise\n  \n- \nbackgroundNoise \n: \nNoise[ \n]\n  \n- \ntolerance \n: \nInteger \nVrSettings\n  \n- \nid \n: \nString\n  \n- \nfirstName \n: \nString\n  \n- \nlastName \n: \nString\n  \n- \ngender \n: \nBoolean\n  \n- \nbirthdate \n: \nDate\n  \n- \nemail \n: \nString\n  \n- \npassword \n: \nString\n  \n- \nhistory \n: \nHistory\nUser\n1\n1\n  \n- \ntype \n: \nInteger\n  \n- \ndelta \n: \nInteger\n  \n- \nschedule \n: \nDate\n  \n- \nisLocalNotificationEnabled \n: \nBoolean\n  \n- \nisEmailNotificationEnabled \n: \nBoolean\n  \n- \nisEnabled \n: \nBoolean\nReminder\n1\n1\n  \n  \n- \nstatistics \n: \nStatistic[ \n]\nHistory\n  \n- \nstartTime \n: \nDate\n  \n- \nendtTime \n: \nDate\n  \n- \nrounds \n: \nInteger\n  \n- \ntolerance \n: \nFloat\n  \n- \nruns \n: \nSingleRun[ \n]\n  \n- \ndifficulty \n: \nInteger\nStatistic\n  \n- \nround \n: \nInteger\n  \n- \ndeviation \n: \nFloat\n  \n- \nisHit \n: \nBoolean\n  \n- \nrotationHistory \n: \nRotationHistory\nSingleRun\n  \n  \n- \ntimestamp \n: \nLong\n  \n- \nrotation \n: \nFloat\nItem\n  \n- \nhistory \n: \nItem[ \n]\nRotationHistory\n1\n1\n1\n0..*\n1\n1..*\n1\n1\n1\n1..*\nTolerance\nArea \nin \nwhich \nHits \nare \nvalid.\n(Soundposition \n+- \nTolerance)\nReminderTypes\n0=Single, \n1=Daily, \n2=Weekly\nAbbildung 4.3: Datenmodell der Anwendung\n214 Architektur & Implementierung\n4.4 Vorgehensweise\nDie in der Planungsphase identi\ufb01zierten Entities und Ressourcen wurden in Form von\nJava-Klassen modelliert, welche zur persistenten Datenhaltung dienen (siehe Abbildung\n4.3). Dabei wurden einige Klassen w\u00e4hrend der Implementierungsphase hinzugef\u00fcgt\nund angepasst.\nDamit die Benutzerdaten des angemeldeten Benutzers zu jeder Zeit abrufbar sind, wurde\ndasSingleton-Pattern verwendet, welches sich in vergangenen Projekten durchaus\nbew\u00e4hrt hat (siehe Quelltext A.3). Die Verwendung eines Singeltons erh\u00f6ht jedoch auch\ndie Fehleranf\u00e4lligkeit der Anwendung, da die Instanz des Singletons durch den Activity\nLifecycle von Android gel\u00f6scht werden kann. Um diese Fehler abzufangen wurde die\nKlasse UserUtil implementiert, mit deren Hilfe bei jedem onResume() Aufruf die\nInstanz des Singeltons \u00fcberpr\u00fcft wird (siehe Quelltext A.4).\nDie Anwendung bedient sich einer Reihe von Activities , die alle eine bestimmte Auf-\ngabe erf\u00fcllen und ihre eigene gra\ufb01sche Ober\ufb02\u00e4che (UI) besitzen (siehe Abbildung 4.4).\nIm Folgenden werden diese Aufgaben genauer beschrieben und wichtige Designent-\nscheidungen, die sich w\u00e4hrend der Implementierung herausgestellt haben, erl\u00e4utert.\n4.4.1 SplashScreen\nDieSplashActivity wird beim Start der Anwendung aufgerufen und verwendet das\nLaunch Screen Pattern [25]. Sie \u00fcberpr\u00fcft ob sich bereits ein Benutzer angemeldet hat,\nindem im Singelton nach dem hinterlegten User-Objekt gesucht wird. Falls dieses nicht\nexistiert, wird zus\u00e4tzlich in den SharedPreferences gesucht. W\u00e4hrend dieses Vorgangs\nwird dem Benutzer eine Platzhalter Ober\ufb02\u00e4che angezeigt. Sobald die Suche einen\nTreffer erzielt, werden Nutzerdaten geladen und der Benutzer wird zur OverviewActivity\nweitergeleitet. Schl\u00e4gt die Suche fehl, wird der Benutzer zur LoginActivity weitergeleitet,\nin der er sich erneut anmelden kann.\nWird die SplashActivity mit bestimmten Parametern aufgerufen, ist es m\u00f6glich das\nUser-Objekt des angemeldeten Benutzers sowohl aus dem Singelton als auch aus den\n224.4 Vorgehensweise\nSplashActivity\nLoginActivity\nRegisterActivity\nAccountActivity\nReminderActivity\nOverviewActivity\nGlobalStatisticFragment\nHistoryFragment\nSodaActivity\nInstructionActivity\nStatisticActivity\nVrSettingsActivity\nAbbildung 4.4: \u00dcbersicht \u00fcber alle erstellten Activities\nSharedPreferences zu l\u00f6schen. Diese Option wurde bewusst implementiert, damit das\nUserUtil im Falle eines Fehlers den aktuellen Benutzer abmelden und ihn zur\u00fcck zur\nLoginActivity weiterleiten kann.\n4.4.2 Login\nIn der LoginActivity wird der Benutzer dazu aufgefordert seine E-Mail Adresse und\nsein Passwort einzugeben. Nachdem er mit einem Klick auf den \u201eAnmelden\u201c-Button\nseine Eingabe best\u00e4tigt, werden die eingegebenen Daten \u00fcberpr\u00fcft. Zuvor werden\nalle registrierten Benutzer geladen, damit alle ben\u00f6tigten Daten sofort vorhanden sind.\nDie Anmeldedaten des Benutzers werden dann mit denen der registrierten Benutzer\nverglichen. Stimmen die Anmeldedaten mit den Daten eines Benutzers \u00fcberein, wird\ndieser angemeldet. Besitzt ein Benutzer noch kein Benutzerkonto, hat er die M\u00f6glichkeit\nzur RegisterActivity zu navigieren, in der er ein neues Benutzerkonto anlegen kann.\nDes Weiteren bietet die LoginActivity die M\u00f6glichkeit bereits vorhandene Benutzerkonten\nzu importieren (siehe Abbildung 4.5). Mit Hilfe einer externen Dateiexplorer-Anwendung,\n234 Architektur & Implementierung\nAppName\nTab \n1\nTab \n2\nText\nText\nButton\nForgot \nPassword?\nBenutzer \nImport\nLogin\nRegistrieren\nPasswort \nzur\u00fccksetzen\nAbbildung 4.5: Mockup vs. Screenshot: LoginActivity\ndie ebenfalls auf dem Ger\u00e4t installiert ist, k\u00f6nnen Json-Dateien ausgew\u00e4hlt werden die\nbeim Import-Vorgang gepr\u00fcft werden. Durch die Verwendung von Gson k\u00f6nnen dann\ndie Java-Objekte anhand der Json-Dateien generiert werden. Zur Vermeidung von dop-\npelten bzw. identischen Benutzerkonten werden die Benutzer-ID und die E-Mail Adresse\ndes importierten Benutzers \u00fcberpr\u00fcft. Sofern diese nicht von anderen Benutzerkonten\nverwendet werden, kann ein Benutzerkonto erfolgreich importiert werden.\nBesitzt ein Benutzer bereits ein Konto, dessen dazugeh\u00f6riges Passwort er vergessen hat,\nist es m\u00f6glich das Passwort zur\u00fcckzusetzen. Zuerst wird der Benutzer dazu aufgefordert\ndie E-Mail Adresse anzugeben, die an das Benutzerkonto verkn\u00fcpft ist. Dadurch soll\nverhindert werden, dass Benutzer die Passw\u00f6rter anderer Benutzer versehentlich \u00e4ndern\nk\u00f6nnen. Ist die E-Mail Adresse g\u00fcltig, soll der Benutzer den Vorgang best\u00e4tigen. Nach\nder Best\u00e4tigung wird das vergessene Passwort durch ein zuf\u00e4llig generiertes 8-stelliges\nPassword ersetzt. Das neue Passwort wird dann per E-Mail mit Hilfe der Android Mail API\nan die Adresse des Benutzers gesendet. Ab diesem Zeitpunkt kann sich der Benutzer\nmit dem neuen Passwort anmelden [ 26]. Hierf\u00fcr wurde ein GMX-Benutzerkonto erstellt,\nmit dessen SMTP-Zugang die E-Mails versendet werden k\u00f6nnen.\n244.4 Vorgehensweise\n4.4.3 Registrierung\nDie Registrierung sollte eigentlich ein zus\u00e4tzliches Feature der LoginActivity werden\n(siehe Abbildung 4.5). Wegen Problemen mit den Android Runtime Permissions wurde\njedoch die Registrierung in eine separate Activity, die RegisterActivity , verlagert.\nDadurch wurden alle Probleme beseitigt und die LoginActivity wirkt zus\u00e4tzlich nicht mehr\n\u00fcberladen.\nDa Benutzerkonten auch als Json-Datei exportiert werden k\u00f6nnen, muss das Passwort\nder Benutzer durch eine kryptogra\ufb01sche Funktion unkenntlich gemacht werden. Hierf\u00fcr\nwurde die Bcrypt Bibliothek f\u00fcr Java verwendet [ 27]. Neben der Hashfunktion bietet\ndiese Bibliothek auch eine Vergleichsfunktion die in der LoginActivity zum Einsatz kommt.\nBevor Benutzer in der RegisterActivity neue Benutzerkonten erstellen k\u00f6nnen, m\u00fcssen\nsie zuerst alle erforderlichen Daten eingeben. Mit einem Klick auf den \u201eRegistrieren\u201c-\nButton werden zuerst alle eingegebenen Daten mit Hilfe des InputManagers \u00fcberpr\u00fcft.\nSind die eingegebenen Daten g\u00fcltig, wird automatisch ein neues Benutzerkonto angelegt.\nDer Benutzer wird nach diesem Vorgang angemeldet.\n4.4.4 \u00dcberblick \u00fcber alle Aktivit\u00e4ten\nDieOverviewActivity ist die zentrale Activity der Anwendung, da der Benutzer\nhier die M\u00f6glichkeit hat in alle weiteren Activities zu gelangen (siehe Abbildung 4.6).\nAu\u00dferdem kann sich der Benutzer jederzeit Abmelden indem er die \u201eZur\u00fcck\u201c-Taste oder\ndas Logout-Icon in der Toolbar verwendet. F\u00fcr die OverviewActivity wurde bewusst ein\nTab-Layout mit zwei Fragmenten gew\u00e4hlt, damit der Benutzer all seine Daten schnell und\neinfach abrufen kann. Die beiden Fragmente besitzen jeweils eine spezi\ufb01sche Toolbar\nmit unterschiedlichen Aktionen.\nDas GlobalStatisticFragment , welches im ersten Tab zu \ufb01nden ist, dient als\n\u00dcbersicht \u00fcber alle vergangenen Sitzungen. Dem Benutzer werden Statistiken, die\nsich auf die vergangenen Sitzungen beziehen, angezeigt. Damit die Statistiken nicht\nnur in reiner Textform dargestellt werden, wurde eine externe Diagramm-Bibliothek\nnamens MPAndroidChart verwendet [ 28]. Das Fragment wirkt durch die Darstellung\n254 Architektur & Implementierung\neines Kuchendiagramm, welches das Treffer/Fehler Verh\u00e4ltnis anzeigt, optisch deutlich\nansprechender.\nAccountActivity\nLogout\nReminderActivity\nTeilen\nImport/Export\nInstructionActivity\nAppName\nItem \n1\nItem \n2\nItem \n3\nItem \n4\nItem \n5\nTab \n1\nTab \n2\nButton\nAbbildung 4.6: Mockup vs. Screenshot: OverviewActivity\nDer zweite Tab beherbergt das HistoryFragment , welches alle vergangenen Sitzun-\ngen in einer Liste anzeigt. Hierf\u00fcr wurde die RecyclerView verwendet, da diese schnell\nund einfach zu implementieren ist und sie nebenbei ef\ufb01zienter als normale ListViews\narbeitet. Der Benutzer kann diese Liste nach mehreren Kriterien sortieren. Da oft auch\nnur ein oder zwei Sitzungen interessant f\u00fcr einen Export sind, bietet die Liste auch\ndie Selektion eines oder mehrerer Objekte. Durch eine Animation und einer anderen\nHintergrundfarbe bekommt der Benutzer ein visuelles Feedback \u00fcber die momentan aus-\ngew\u00e4hlten Objekte (siehe Abbildung 4.6). Der Benutzer kann die ausgew\u00e4hlten Objekte\nteilen, exportieren und auch l\u00f6schen. Diese Features werden w\u00e4hrend der Selektion in\nder Toolbar f\u00fcr den Benutzer zug\u00e4nglich.\nDa beide Fragmente sich auf das History-Objekt des Benutzers beziehen und diese\nDaten im HistoryFragment vom Benutzer manipulierbar sind, m\u00fcssen beide Fragmente\nsich gegenseitig benachrichtigen sobald \u00c4nderungen vorgenommen wurden. Zuerst\nwurde versucht dieses Problem durch die erneute Instanziierung des nicht angezeigten\nFragments zu beheben. Leider f\u00fchrte dieser L\u00f6sungsansatz zu immer mehr Problemen\n264.4 Vorgehensweise\nund musste daher verworfen werden. Da beide Fragmente sich auf die History-Instanz\ndes User-Objekts im Singelton beziehen, war schnell ein alternativer L\u00f6sungsweg \u00fcber\ndasListener-Konzept gefunden. Beide Fragmente implementieren einen Listener, der\nim Singelton registriert wird und die Fragmente benachrichtigt, sobald sich Daten im\nSingelton \u00e4ndern. Somit wissen beide Fragmente wann Daten ge\u00e4ndert werden und\nk\u00f6nnen diese neu laden und verarbeiten.\n4.4.5 Statistiken\nIn der StatisticActivity werden, \u00e4hnlich wie im GlobalStatisticFragment, Statis-\ntiken zu der vom Benutzer ausgew\u00e4hlten Sitzung angezeigt. Durch die Verwendung\nvon MPAndroidChart wirkt die Benutzerober\ufb02\u00e4che mit Hilfe von Diagrammen optisch\nansprechender f\u00fcr den Benutzer. Hier wird neben dem Kuchendiagramm, welches das\nTreffer/Fehler Verh\u00e4ltnis abbildet, auch ein Liniendiagramm verwendet. Es wird jeweils\nnur ein Diagramm angezeigt und der Benutzer kann zwischen beiden Diagrammen\nwechseln. Die Werte aus der RotationHistory werden mit Hilfe des Liniendiagramms\nanhand einer Zeitachse gra\ufb01sch abgebildet. Somit hat der Benutzer einen \u00dcberblick\n\u00fcber seine Bewegungen w\u00e4hrend der Sitzung.\nHierbei ist zu beachten, dass bei Drehung \u00fcber 360 Grad das Diagramm bei dem\nn\u00e4chsten Wert einen Sprung zur 0 macht. Dreht sich ein Benutzer w\u00e4hrend eines\nSitzung immer im Bereich zwischen 0 und 360 Grad bildet das Liniendiagramm sehr\nviele Spr\u00fcnge zwischen diesen Werten ab. Leider wurde f\u00fcr dieses Problem keine\npassende L\u00f6sung gefunden.\n4.4.6 Benutzerpro\ufb01l\nDer Benutzer kann in der AccountActivity jederzeit seine pers\u00f6nlichen Daten und\nsein Passwort \u00e4ndern. Sollte er zum Beispiel das Passwort in der LoginActivity zu-\nr\u00fccksetzen, kann er in der AccountActivity das zuf\u00e4llig generierte Passwort durch ein\nanderes Passwort ersetzen. Damit die gra\ufb01sche Ober\ufb02\u00e4che nicht allzu leer wirkt, wird\ndas Geschlecht des Benutzers sowohl im Eingabefeld als auch im oberen Bereich als\n274 Architektur & Implementierung\nIcon angezeigt (siehe Abbildung 4.7). Nachdem der Benutzer seine pers\u00f6nlichen Daten\nge\u00e4ndert hat, kann er mit einem Klick auf den \u201eSpeichern\u201c-Button die \u00c4nderungen\nspeichern. Zuvor werden wieder alle Eingaben durch den InputManager \u00fcberpr\u00fcft.\nSpeichern\nEdit \nProfile\nText\nText\nText\n...\nTeilen\nExport/Import\nAbbildung 4.7: Mockup vs. Screenshot: AccountActivity\nWird das Benutzerkonto nicht mehr ben\u00f6tigt, besteht die M\u00f6glichkeit dieses zu l\u00f6schen.\nDamit der Benutzer das Konto nicht aus Versehen l\u00f6scht, wurde eine optionale Backup-\nFunktion implementiert, die standardm\u00e4\u00dfig aktiviert ist. Vor dem L\u00f6schen erscheint\nein Dialogfeld, in dem der Vorgang best\u00e4tigt werden muss und die Backup-Funktion\naktiviert bzw. deaktiviert werden kann. Ist das Backup aktiviert, wird vor dem L\u00f6schen\ndas Benutzerkonto als Json-Datei exportiert. Der Benutzer wird nach einem erfolgreichen\nL\u00f6schen der Benutzerdatei automatisch abgemeldet und zur LoginActivity geleitet.\nDa die Lebensdauer von Smartphones je nach Benutzer sehr gering ausf\u00e4llt, sollten\nBenutzerdaten nicht nur auf dem Ger\u00e4t gespeichert werden. Durch die Implementierung\neiner Teilen- bzw. Export-Funktion, die das Konto eines Benutzers als Json-Datei spei-\nchert, sollen Backups erm\u00f6glicht werden. Die Dateien k\u00f6nnen dann per USB-Verbindung\nauf den Speicher eines anderen Ger\u00e4tes \u00fcbertragen werden. Au\u00dferdem k\u00f6nnen Da-\nteien durch die optionale Teilen-Funktion \u00fcber Cloud-Dienste oder andere Programme\ngesichert werden.\n284.4 Vorgehensweise\n4.4.7 Erinnerungen\nErinnerungen sind f\u00fcr jeden Benutzer standardm\u00e4\u00dfig deaktiviert. In der Reminder-\nActivity k\u00f6nnen diese jedoch aktiviert aber auch wieder deaktiviert werden. Entschei-\ndet der Benutzer sich f\u00fcr eine t\u00e4gliche bzw. w\u00f6chentliche Erinnerung wird der Tag f\u00fcr\ndie n\u00e4chste Erinnerung automatisch berechnet. Die Erinnerungen erfolgen entweder\nper lokaler Benachrichtigung auf dem Ger\u00e4t oder per E-Mail, die beide aktiviert bzw.\ndeaktiviert werden k\u00f6nnen. Sobald Tag und Uhrzeit in der Zukunft liegen, wird auto-\nmatisch ein Countdown in der Toolbar angezeigt, damit der Benutzer wei\u00df dass der\nErinnerungs-Dienst aktiv ist.\nDamit die Anwendung bis zu diesem Zeitpunkt nicht den kompletten Zeitraum im Hinter-\ngrund aktiv ist, wird die von Android bereitgestellte Klasse AlarmManager verwendet\n[29]. Sobald der zuvor ausgew\u00e4hlte Zeitpunkt eintrifft, wird vom AlarmManager ein\nBroadcast gesendet, der vom ReminderReceiver abgefangen wird (siehe Quelltext\nA.5). Dieser sendet mit Hilfe der Java Mail API eine E-Mail an die Adresse des Benutzers,\nsofern die E-Mail Erinnerung aktiviert ist. Ist die lokale Erinnerung aktiviert, wird eine\nNoti\ufb01cation erstellt, die in der Statusleiste des Ger\u00e4ts angezeigt wird. Sofern t\u00e4gliche\noder w\u00f6chentliche Erinnerungen aktiviert sind, wird der Tag f\u00fcr die n\u00e4chste Erinnerung\nberechnet und der AlarmManager wird erneut gestartet.\nDer AlarmManager machte zu Beginn Probleme, sobald das Ger\u00e4t neu gestartet wurde.\nNach weiterer Recherche stellte sich heraus, dass dieser nur aktiv ist, solange das Ger\u00e4t\nim Betrieb ist. Um dies zu umgehen, wurde ein weiterer Receiver, der BootComplete-\nReceiver , implementiert. Sobald das Ger\u00e4t nach einem Neustart einsatzbereit ist, wird\nein Broadcast gesendet der vom BootCompleteReceiver abgefangen wird. Dieser l\u00e4dt\ndann mit Hilfe des FileUtils alle registrierten Benutzer und startet den AlarmManager f\u00fcr\nalle Benutzer, die Erinnerungen aktiviert haben.\n4.4.8 Anleitung\nDieInstructionActivity wird vor jeder Sitzung aufgerufen und bereitet den Be-\nnutzer in drei Schritten auf die Sitzung vor. Diese Activity wurde als kleines Tutorial\n294 Architektur & Implementierung\nimplementiert, um neuen Benutzern die Handhabung der Anwendung zu erleichtern. Zu\nBeginn wird automatisch \u00fcberpr\u00fcft, ob der Benutzer bereits eine Sitzung abgehalten\nhat. Das erfolgt \u00fcber das VrSettings-Objekt, welches im Singelton gespeichert ist und\nEinstellungen zur Sitzung enth\u00e4lt. Sind diese Einstellungen vorhanden k\u00f6nnen sie vom\nBenutzer wiederverwendet und ver\u00e4ndert werden (siehe Abbildung 4.8).\nSitzung \nstarten\nEinstellungen \n\u00e4ndern\nEinstellungen \n\u00fcbernehmen\nAbbildung 4.8: Screenshot: InstructionActivity\nIm zweiten Schritt \u00fcberpr\u00fcft die Anwendung ob bereits Kopfh\u00f6rer angeschlossen wurden.\nIst dies nicht der Fall, so wird der Benutzer dazu aufgefordert Kopfh\u00f6rer anzuschlie\u00dfen.\nDamit die Anwendung erkennt, ob Kopfh\u00f6rer angeschlossen sind, wurde der Headset-\nPlugReceiver implementiert. Dieser f\u00e4ngt den durch das Anschlie\u00dfen gesendete\nBroadcast ab und benachrichtigt die InstructionActivity mit Hilfe eines Listeners \u00fcber\nden Status der Kopfh\u00f6rer. Dieser Schritt wird automatisch \u00fcbersprungen, sofern bereits\nKopfh\u00f6rer angeschlossen wurden.\nIm letzten Schritt h\u00f6rt der Benutzer das Ger\u00e4usch, dessen Richtung er sp\u00e4ter \ufb01nden\nsoll. W\u00e4hrend das Ger\u00e4usch abgespielt wird, kann der Benutzer die Medien-Lautst\u00e4rke\nanpassen. Zus\u00e4tzlich wird ihm textuell der Ablauf der Sitzung erl\u00e4utert. Mit einem Klick\nauf den \u201eStart\u201c-Button, der nur im dritten Teil angezeigt wird, kann die Sitzung gestartet\nwerden.\n304.4 Vorgehensweise\n4.4.9 Einstellungsm\u00f6glichkeiten\nEinstellungen \nl\u00f6schen\nAbbildung 4.9: Screenshot: VrSettingsActivity\nDie durch die InstructionActivity aufgerufene VrSettingsActivity bietet dem Be-\nnutzer die M\u00f6glichkeit Einstellungen f\u00fcr die n\u00e4chste Sitzung anzupassen. Somit kann\njede Sitzung vom Benutzer neu kon\ufb01guriert werden (siehe Abbildung 4.9). Nachdem alle\nEinstellungen angepasst wurden, kann der Benutzer mit einem Klick auf den \u201eSpeichern\u201c-\nButton die \u00c4nderungen \u00fcbernehmen. Sind alle Felder ausgef\u00fcllt, wird die Activity beendet\nund der Benutzer wird zur\u00fcck zur InstructionActivity geleitet.\nDamit die InstructionActivity erkennt, dass Einstellungen ver\u00e4ndert wurden, wird die\nVrSettingsActivity \u00fcber die Methode startActivityForResult(Intent intent)\naufgerufen. Das setzt voraus, dass die VrSettingsActivity einen R\u00fcckgabeparameter\nbeim Beenden der Activity sendet. Dieser wird \u00fcber einen Callback in der InstructionAc-\ntivity weiter verarbeitet.\n314 Architektur & Implementierung\n4.4.10 Richtungsh\u00f6ren\nSobald ein Benutzer eine neue Sitzung startet, wird er zur SodaActivity weiterge-\nleitet, die alle Funktionalit\u00e4ten f\u00fcr das Richtungsh\u00f6ren enth\u00e4lt. Durch die Verwendung\nderGoogle VR SDK konnten alle ben\u00f6tigten Komponenten und Funktionen realisiert\nwerden [8].\nDie f\u00fcr die gra\ufb01sche Ober\ufb02\u00e4che verwendete GvrView dient zur Wiedergabe der von\nOpen GL ES gerenderten Vr-Inhalte [ 30]. Die GvrView kommuniziert automatisch mit\nden Sensoren des Ger\u00e4tes und erm\u00f6glicht dadurch das Tracking der aktuellen Position\nim virtuellen Raum. Somit wird ohne zus\u00e4tzlichen Aufwand der Blickwinkel im virtuellen\nRaum ver\u00e4ndert, sobald das Ger\u00e4t bewegt wird. Zus\u00e4tzlich unterst\u00fctzt die GvrView\ndie Stereo-Wiedergabe von Vr-Content und ist somit mit Google Cardboard kompa-\ntibel. Interaktionen mit dem am Cardboard angebrachten Magnetbutton k\u00f6nnen \u00fcber\ndie Callback-Methode onCardboardTrigger() abgefangen werden. Diese wird bei\neinem Klick auf den Bildschirm ebenfalls aufgerufen und erm\u00f6glicht somit auch die\nVerwendung der Anwendung ohne Google Cardboard. Die GvrView der SodaActivity\nerm\u00f6glicht lediglich die Wiedergabe eines virtuellen Raums, der in den Einstellungen\nvom Benutzer ver\u00e4ndert aber auch deaktiviert werden kann (siehe Abbildung 4.10).\nAbbildung 4.10: Screenshot: SodaActivity\nW\u00e4hrend der Implementierung wurde versucht anstelle des virtuellen Raums ein 360\nGrad Panoramabild zu verwenden. Leider war die Implementierung eines Panoramabilds\nin der GvrView im ersten Ansatz wegen mangelnder Open GL Kenntnissen nicht m\u00f6glich.\nDer zweite L\u00f6sungsweg f\u00fchrte \u00fcber die Verwendung der VrPanoramaView , die es sehr\neinfach erm\u00f6glicht Panoramabilder als Vr-Content zu verwenden [ 31]. Dadurch dass\n324.4 Vorgehensweise\ndie VrPanoramaView nicht auf Open GL zur\u00fcckgreift, fehlten jedoch die ben\u00f6tigten Ele-\nmente zur Realisierung der r\u00e4umlichen Akustik. Dadurch wurden beide L\u00f6sungsans\u00e4tze\nverworfen, was die Wiederverwendung des virtuellen Raums zur Folge hatte.\nDas wichtigste Feature der SodaActivity ist die Wiedergabe von Ger\u00e4uschen, die zuf\u00e4llig\nim Raum platziert werden. Die aus der Google VR SDK verwendete GvrAudioEngine\nist eine Audio Rendering Engine, die eine realistische Wiedergabe von T\u00f6nen im Raum\nerm\u00f6glicht [ 23]. Beim Start der Activity werden alle ben\u00f6tigten Audiodateien von der\nGvrAudioEngine im Hintergrund geladen, welche eine ID zugewiesen bekommen. Hierbei\nmuss beachtet werden, dass die Audiodateien im Mono-Format gespeichert werden, da\nsonst der Ursprung der Ger\u00e4usche nicht wahrnehmbar ist. \u00dcber die zugewiesene ID\nwerden die Audiodateien beim Start jeder Runde abgespielt und gestoppt, sobald die\nRunde durch das T\u00e4tigen des Magnetbuttons oder mit einem Klick auf den Bildschirm\nbeendet wird. Die Position der Ger\u00e4usche kann \u00fcber xyz-Koordinaten beliebig ver\u00e4ndert\nwerden.\nW\u00e4hrend die Ger\u00e4usche zu h\u00f6ren sind wird im Hintergrund alle 100ms die Drehung des\nBenutzers bzw. des Ger\u00e4ts in Grad gespeichert. Mit Hilfe eines Threads, der alle 100ms\ndie SodaActivity \u00fcber einen Listener informiert, wird die Drehung zusammen mit einem\nZeitstempel in das RotationHistory-Objekt der aktuellen Runde gespeichert. Somit muss\nkeine separate Log-Datei erstellt werden und alle Daten einer Sitzung sind in einem\nStatistic-Object vereint.\nMit Hilfe der in der SodaActivity verwendeten TextToSpeech API bekommt der Benut-\nzer auditives Feedback \u00fcber die Geschehnisse und Interaktionen [ 32]. Die API erm\u00f6glicht\nes geschriebenen Text, der sowohl in Englisch als auch in Deutsch hinterlegt ist, gespro-\nchen auszugeben. Zus\u00e4tzlich soll der Benutzer beim Beenden jeder Runde visuelles\nFeedback \u00fcber die Position des gesuchten Ger\u00e4uschs bekommen. Landet der Benutzer\neinen Treffer, wird ihm ein gr\u00fcner W\u00fcrfel an der Position des Ger\u00e4usches angezeigt. Im\nanderen Fall ist der W\u00fcrfel rot gef\u00e4rbt und symbolisiert daher einen Fehler. Sobald alle\nRunden erfolgreich beendet wurden, wird der Benutzer zur StatisticActivity geleitet, in\nder er Statistiken zur Sitzung einsehen kann.\n334 Architektur & Implementierung\n4.5 Systemanforderungen\nWie jede Anwendung ben\u00f6tigt Soda auch spezielle Hard- und Softwarevoraussetzungen\n(siehe Tabelle 4.1). Dadurch, dass die Anwendung eine native Android Anwendung ist,\nkann diese auch nur auf Android Smartphones verwendet werden. Ger\u00e4te unter der\nAndroid Version 4.4 (KitKat) werden nicht unterst\u00fctzt, da die Google VR API Ger\u00e4te\nab Version 4.4 oder h\u00f6her ben\u00f6tigt. Zus\u00e4tzlich werden Gyroskop, Beschleunigungs-\nsensor und ein Magnetometer vorausgesetzt. F\u00fcr eine \ufb02\u00fcssige Darstellung wird ein\nleistungsstarkes Smartphone empfohlen, da die Wiedergabe von VR-Content mit kon-\nstanten 60fps (Bilder pro Sekunde) erfolgen sollte. F\u00fcr sch\u00e4rferes VR-Erlebnis wird eine\nDisplayau\ufb02\u00f6sung von Full-HD Display oder besser empfohlen.\nHardware\nProzessor moderne CPU (4 Kerne) / GPU\nArbeitsspeicher min. 2GB\nSpeicher Anwendung 15,3MB\nSpeicher Daten 100MB oder mehr\nSensoren Gyroskop, Beschleunigungssensor, Magnetometer\nDisplay min. 1920x1080px (empfohlen)\nSchnittstellen Kopfh\u00f6reranschluss (Klinke) oder Bluetooth\nExterne Ger\u00e4te Kopfh\u00f6rer mit Klinkenstecker oder Bluetooth\nSoftware\nBetriebssystem Android Version 4.4+\nGra\ufb01k Unterst\u00fctzung von Open GL ES\nTabelle 4.1: Systemanforderungen der Anwendung\n4.6 Installation\nDadurch dass Soda ein Prototyp ist, kann dieser auch nicht im Google Play Store\ngefunden werden. Um trotzdem eine schnelle und einfache Installation der Anwendung\n344.6 Installation\nzu garantieren wurde am Ende der Implementierung eine Applikation-Datei erstellt.\nSomit kann auch die Installation vom Endbenutzer selbst vorgenommen werden.\nAbbildung 4.11: Erlauben der Installation externer Anwendungen\nBevor die Anwendung auf einem Android Ger\u00e4t installiert werden kann, muss \u00fcberpr\u00fcft\nwerden ob das Ger\u00e4t den Systemanforderungen entspricht. Andernfalls ist die Funktio-\nnalit\u00e4t eventuell eingeschr\u00e4nkt. Des Weiteren muss die Option \u201eUnbekannte Herkunft\u201c\nin den Einstellungen aktiviert sein. Diese Option ist auf jedem Ger\u00e4t standardm\u00e4\u00dfig\ndeaktiviert und kann unter Einstellungen \u2192Sicherheit aktiviert werden. Sie erm\u00f6glicht\nes Anwendungen anhand einer Applikation-Datei auf dem Ger\u00e4t zu installieren, die\nper USB-Verbindung auf das Ger\u00e4t kopiert werden k\u00f6nnen. Mit einer Datei-Explorer\nAnwendung kann diese Datei dann \u00fcber den Paket-Manager von Android ge\u00f6ffnet und\ninstalliert werden.\n355\nAnforderungsabgleich\nIm folgenden Kapitel wird die Umsetzung der an die Anwendung gestellten Anforderun-\ngen bewertet. F\u00fcr die Bewertung wurde eine Skala von \u201esehr gut\u201c (1) bis \u201eungen\u00fcgend\u201c\n(6) verwendet. Die Wertungen ergeben sich aus der Art und der Qualit\u00e4t der Umsetzung\nder jeweiligen Anforderungen. Zus\u00e4tzlich wird erneut auf die Anforderungen eingegan-\ngen um die dazugeh\u00f6rige Bewertung zu verdeutlichen.\n5.1 Funktionale Anforderungen\nIm folgenden Abschnitt wird die Qualit\u00e4t der Umsetzung der funktionalen Anforderungen\nbewertet (siehe Tabelle 5.1). Die in Abschnitt 3.1 beschriebenen funktionalen Anforderun-\ngen wurden alle in der Anwendung umgesetzt und erhielten eine Bewertung zwischen\n\u201esehr gut\u201c (1) und \u201egut\u201c (2).\nFunktionale Anforderungen 123456\nBenutzerkonto X\n\u00dcberblick X\nAnpassungsm\u00f6glichkeiten X\nSchwierigkeitsgrade X\nRichtungsh\u00f6ren X\nErinnerungen X\nTabelle 5.1: Anforderungsableich: funktionale Anforderungen\n375 Anforderungsabgleich\n5.1.1 Benutzerkonto\n\u00dcber die RegisterActivity ist es m\u00f6glich, neue Benutzerkonten zu erstellen. Hierbei m\u00fcs-\nsen vorerst die in den Anforderungen gestellten pers\u00f6nlichen Daten eingegeben werden.\nDas Passwort der Benutzer wird mit Hilfe von Bcrypt gehasht und somit unzug\u00e4nglich f\u00fcr\nAndere gemacht. Au\u00dferdem k\u00f6nnen Passw\u00f6rter jederzeit zur\u00fcckgesetzt oder ge\u00e4ndert\nwerden. Die vergangenen Sitzungen eines Benutzers sind in Form eines Verlaufs in das\nBenutzerkonto integriert und somit jederzeit erreichbar.\nDamit nicht jeder Benutzer ein separates Ger\u00e4t ben\u00f6tigt, erm\u00f6glicht die Anwendung das\nErstellen und die Verwendung mehrerer Benutzerkonten. Die hinterlegten Benutzerdaten\nsind in einem nicht zug\u00e4nglichen Verzeichnis gespeichert und somit nicht zug\u00e4nglich f\u00fcr\nden Benutzer. Lediglich mit der integrierten Import- und Exportfunktion k\u00f6nnen Benutzer\nihr Benutzerkonto als Json-Datei sichern und wiederherstellen. In der LoginActivity\nist es m\u00f6glich eine Json-Datei, welche ein Benutzerkonto enth\u00e4lt, zu importieren. Die\nAccountActivity erm\u00f6glicht wiederum das Benutzerkonto als Json-Datei zu exportieren.\nBewertung: sehr gut\n5.1.2 \u00dcberblick\nDurch die in der OverviewActivity verwendeten Fragmente, werden Statistiken und Ver-\nlauf in einer Activity realisiert. Durch einen einfachen Tab-Wechsel kann der Benutzer\nentweder Statistiken \u00fcber alle vergangenen Sitzungen oder den Sitzungsverlauf be-\ntrachten. Im GlobalStatisticsFragment werden dem Benutzer folgende Informationen\nangezeigt:\n\u000fTreffer/Fehler Verh\u00e4ltnis in Form eines PieCharts\n\u000fDatum der letzten Sitzung\n\u000fSitzungsdauer \u00fcber alle vergangenen Sitzungen\n\u000fSumme der beendeten Runden aller Sitzungen\n\u000fSumme der Treffer aller Sitzungen\n385.1 Funktionale Anforderungen\n\u000fSumme der Fehler aller Sitzungen\n\u000fTreffer/Fehler Verh\u00e4ltnis als Flie\u00dfkommazahl\nDas HistoryFragment realisiert den Verlauf, der vom Benutzer manipulierbar ist. Durch\nSelektierung einer oder mehrerer Sitzungen kann der Benutzer die ausgew\u00e4hlten Sit-\nzungen l\u00f6schen, teilen und exportieren. Au\u00dferdem besteht die M\u00f6glichkeit einen Verlauf\nin Form einer Json-Datei zu importieren. \u00dcber die Sortierfunktion l\u00e4sst sich der Verlauf\nnach den in den Anforderungen gestellten Kriterien sortieren.\nBewertung: sehr gut\n5.1.3 Anpassungsm\u00f6glichkeiten\nDie Einstellungen zum Richtungsh\u00f6ren werden in den SharedPreferences f\u00fcr jeden Be-\nnutzer persistent gespeichert und k\u00f6nnen daher wiederverwendet werden. Der Benutzer\nkann folgende Einstellungen vornehmen:\n\u000fRundenanzahl\n\u000fToleranz\n\u000fSchwierigkeitsgrad\n\u000fGer\u00e4usche-Thema\n\u000fLautst\u00e4rke\n\u000fAudioqualit\u00e4t\n\u000fVirtueller Raum\n\u000fBodenfarbe f\u00fcr den virtuelle Raum\nBevor eine neue Sitzung gestartet wird, wird die InstructionActivity aufgerufen, in der\nzun\u00e4chst die oben genannten Einstellungen angepasst werden k\u00f6nnen. Nachdem die\nEinstellungen best\u00e4tigt wurden \u00fcberpr\u00fcft die Anwendung ob bereits Kopfh\u00f6rer ange-\nschlossen sind. Nachdem der Benutzer Kopfh\u00f6rer angeschlossen hat wird das Ger\u00e4usch\n395 Anforderungsabgleich\nf\u00fcr das Richtungsh\u00f6ren abgespielt, dessen Lautst\u00e4rke ebenfalls anpassbar ist. Gleich-\nzeitig wird dem Benutzer das Richtungsh\u00f6ren in textueller Form erkl\u00e4rt.\nBewertung: gut\n5.1.4 Schwierigkeitsgrade\nDie Anwendung stellt f\u00fcr das Richtungsh\u00f6ren drei Schwierigkeitsgrade zur Wahl. Die\nverschiedenen Schwierigkeitsgrade funktionieren exakt so, wie sie in den Anforderungen\nfestgelegt wurden. Somit wird je nach Schwierigkeitsgrad das Richtungsh\u00f6ren f\u00fcr den\nBenutzer erleichtert bzw. erschwert.\nBewertung: sehr gut\n5.1.5 Richtungsh\u00f6ren\nW\u00e4hrend der Initialiserung der SodaActivity werden die zuvor festgelegten Einstellungen\nangewandt und alle ben\u00f6tigten Audiodateien geladen. W\u00e4hrend des Ladevorgangs\nsind keine Benutzeraktionen m\u00f6glich. Nach der Initialisierung wird dem Benutzer per\nauditivem Feedback (\u00fcber die TextToSpeech API) mitgeteilt, dass er mit einem Klick die\nSitzung starten kann. Der Klick erfolgt entweder mit einem Tipp auf den Bildschirm oder\nmit dem Cardboard-Button, sofern ein Cardboard vorhanden ist. Nun h\u00f6rt der Benutzer\nje nach gew\u00e4hltem Schwierigkeitsgrad ein bzw. mehrere Ger\u00e4usche, von denen er die\nRichtung des in der InstructionActivity abgespielten Ger\u00e4uschs \ufb01nden muss. Parallel wird\nalle 100ms die Drehung des Benutzers in Grad gespeichert. Nachdem der Benutzer die\nRichtung mit einem Klick best\u00e4tigt, wird die Runde beendet und der Benutzer bekommt\nper auditivem Feedback mitgeteilt ob es sich um einen Treffer oder einen Fehler handelt.\nAu\u00dferdem wird er wieder aufgefordert mit einem Klick die n\u00e4chste Runde zu starten.\nNachdem alle Runden beendet wurden, wird die Sitzung zum Verlauf des Benutzers\nhinzugef\u00fcgt und gespeichert. Der Benutzer wird dann zur StatisticActivity weitergeleitet,\nin der er Statistiken zur Sitzung betrachten kann.\nBewertung: gut\n405.2 Nicht-funktionale Anforderungen\n5.1.6 Erinnerungen\nErinnerungen k\u00f6nnen mit Hilfe der ReminderActivity aktiviert und kon\ufb01guriert werden.\nEs k\u00f6nne folgende Einstellungen vom Benutzer get\u00e4tigt werden:\n\u000fTag/Datum und Uhrzeit\n\u000fTyp (Einmalig, T\u00e4glich, W\u00f6chentlich)\n\u000fArt der Benachrichtigung (lokal, E-Mail)\nSofern Tag und Uhrzeit in der Zukunft liegen, wird automatisch mit Hilfe des AlarmMana-\nger ein Alarm auf Tag und Uhrzeit gesetzt. In der ReminderActivity wird zus\u00e4tzlich ein\nCountdown angezeigt. Sobald der Tag und die Uhrzeit eintreffen werden die gew\u00e4hlten\nErinnerungen angezeigt. Ist der Typ auf t\u00e4glich oder w\u00f6chentlich gesetzt wird au\u00dferdem\nautomatisch der Tag um den gew\u00e4hlten Zeitraum in die Zukunft verschoben und erneut\nein Alarm gesetzt.\nBewertung: sehr gut\n5.2 Nicht-funktionale Anforderungen\nDer folgende Abschnitt befasst sich mit der Bewertung der Umsetzung der nicht-\nfunktionalen Anforderungen (siehe Tabelle 5.2). Alle nicht-funktionalen Anforderungen\nwurden im Bereich zwischen \u201esehr gut\u201c (1) und \u201egut\u201c (2) eingestuft.\nNicht-funktionale Anforderungen 123456\nZuverl\u00e4ssigkeit X\nLook & Feel X\nLeistung und Ef\ufb01zienz X\nSicherheit X\nOf\ufb02ine Anwendung X\nTabelle 5.2: Anforderungsableich: nicht-funktionale Anforderungen\n415 Anforderungsabgleich\n5.2.1 Zuverl\u00e4ssigkeit\nDie Anwendung ist f\u00fcr ihre kurze Entwicklungsdauer sehr stabil, was bedeutet dass\nin der Regel keine Abst\u00fcrze zu erwarten sind. Sollten trotzdem unerwartete Fehler im\nZusammenhang mit dem Singelton auftreten st\u00fcrzt die App trotzdem nicht ab, da diese\ndurch das UserUtil abgefangen werden. Trotz umfangreichem Fehlerhandling ist es nicht\nunwahrscheinlich, dass bestimmte Fehler auftreten, die die Anwendung zum Abst\u00fcrzen\nbringen k\u00f6nnen.\nSollten im schlimmsten Fall Fehler auftreten, die die Anwendung besch\u00e4digen, kann die-\nse erneut installiert werden. Danach sind zwar alle Benutzerdaten nicht mehr vorhanden,\ndiese k\u00f6nnen aber durch den Json-Import wiederhergestellt werden, sofern Backups\nerstellt wurden.\nBewertung: gut\n5.2.2 Look & Feel\nAlle UI-Komponenten entsprechen gr\u00f6\u00dftenteils den Material Design Richtlinien [ 33].\nDa dieses Designkonzept erst ab Android 5.0 eingef\u00fchrt wurde, mussten die Support-\nLibraries von Google verwendet werden um auch Material Design auf Ger\u00e4te mit Android\n4.4 zu bringen [ 34]. Die verwendeten Icons sind haupts\u00e4chlich Material-Design nativ\nund wurden im Zusammenhang mit den entsprechenden UI-Komponenten verwendet.\nAn bestimmten Stellen wurden Animationen in die UI mit eingebaut, die das Look & Feel\nabrunden und die Anwendung f\u00fcr den Benutzer ansprechender wirkt.\nBewertung: sehr gut\n5.2.3 Leistung und Ef\ufb01zienz\nDurch asynchrone Speicher- und Ladevorg\u00e4nge wird der Main-Thread der Anwendung\nnicht blockiert. Dadurch k\u00f6nnen w\u00e4hrend dessen andere Aufgaben erledigt werden,\nwie zum Beispiel Initialisierungen oder \u00c4hnliches. Trotzdem ist immer noch gen\u00fcgend\n425.2 Nicht-funktionale Anforderungen\nPotenzial f\u00fcr Leistungsoptimierung vorhanden, da trotz Nebenl\u00e4u\ufb01gkeit die Anwendung\nan bestimmten Stellen kurz ruckelt. Alles in allem ist die Anwendung ef\ufb01zient und\nressourcensparend.\n5.2.4 Sicherheit\nPassw\u00f6rter werden ausschlie\u00dflich mit der Hashfunktion der Bcrypt Bibliothek gehasht\nund gespeichert. Das kryptische Passwort wird somit unkenntlich gemacht und das\nrichtige Passwort kann nicht reproduziert werden. Au\u00dferdem werden die Benutzerkon-\nten, welche als Json-Datei persistent gespeichert werden, im privaten App-Speicher\ngespeichert, der nur von der Anwendung selber zug\u00e4nglich ist. Somit k\u00f6nnen die Daten\nnicht unbefugt kopiert oder ver\u00e4ndert werden.\nBewertung: gut\n5.2.5 Of\ufb02ine Anwendung\nDie Anwendung ben\u00f6tigt keinerlei Internetanbindung w\u00e4hrend der Laufzeit. Lediglich\ndie Verwendung der Java Mail API ben\u00f6tigt eine Internetverbindung zum Versenden der\nE-Mails. Der Datenverbrauch h\u00e4lt sich daher sehr in Grenzen, sofern \u00fcberhaupt die Mail\nAPI verwendet wird. Anwendungen, die beim Teilen von Benutzerpro\ufb01len oder Verl\u00e4ufen\naufgerufenen werden, k\u00f6nnten ebenfalls eine Internetverbindung ben\u00f6tigen.\nBewertung: sehr gut\n436\nStudie\nDas folgende Kapitel beschreibt den Aufbau, die Durchf\u00fchrung sowie die Ergebnisse\nund Erkenntnisse der begleitenden Studie. Ziel dieser Studie ist es, einen Vergleich\nzwischen der Anwendung und den bereits existierenden Anwendungen zu erlangen.\n6.1 Aufbau\nDer f\u00fcr die Studie verwendete Fragebogen wurde aufgrund des geringen Umfangs als\nPaper-Pencil Variante umgesetzt [ 35]. Dieser baut auf dem Fragebogen der vorherigen\nStudien auf und muss von jedem Studienteilnehmer ausgef\u00fcllt werden [ 4,5,6,7]. Durch\ndie Unterzeichnung einer Einverst\u00e4ndniserkl\u00e4rung best\u00e4tigt jeder Teilnehmer die anony-\nme Nutzung seiner erhobenen Daten (siehe Anhang B). Neben soziodemographischen\nDaten, wie Alter und Geschlecht werden die Teilnehmer auch nach vergangenen oder\nvorhandenen Geh\u00f6rerkrankungen gefragt. Ebenfalls wird die Erfahrung mit mobilen\nGer\u00e4ten und das vom Teilnehmer verwendete Smartphone erfasst. Eine durch dieser\nStudie hinzugekommene Frage befasst sich mit dem Typ der Kopfh\u00f6rer, die sp\u00e4ter\nzusammen mit der Anwendung verwendet werden. Zum Schluss wird der Teilnehmer\nnach der Erfahrung mit Videospielen gefragt.\nAlle von der Anwendung erhobenen Daten sind im Benutzerkonto der jeweiligen Teil-\nnehmer gespeichert. Die automatisch generierte Benutzer-ID wird zur Identi\ufb01kation der\nTeilnehmer verwendet. Durch den Export des Benutzerkontos als Json-Datei k\u00f6nnen\nalle ben\u00f6tigten Daten sp\u00e4ter von einem Studienbetreuer ausgelesen werden.\n456 Studie\n6.2 Ablauf\nJeder Studienteilnehmer f\u00fcllt zuerst den ausgeh\u00e4ndigten Fragebogen aus. Danach\nerstellt er \u00fcber die Anwendung ein neues Benutzerkonto. Nachdem sich der Benutzer\nangemeldet hat, erfolgen insgesamt sechs Sitzungen in zuf\u00e4lliger Reihenfolge, die von\neinem Studienbetreuer vorgegeben wird. Dies ist erforderlich, da sich die Benutzer\nerst an das neuartige Bedienkonzept gew\u00f6hnen m\u00fcssen. Die zuf\u00e4llige Reihenfolge\nverteilt somit den St\u00f6rfaktor \u201eEingew\u00f6hnungszeit\u201c auf alle sechs Sitzungen. Folgende\nEinstellungen werden in den jeweiligen Sitzung vorgenommen:\nSitzung Schwierigkeitsgrad Ger\u00e4usche-Thema\n1. Leicht Wald\n2. Normal Wald\n3. Schwer Wald\n4. Leicht B\u00fcro\n5. Normal B\u00fcro\n6. Schwer B\u00fcro\nJede Sitzung erfolgt in drei Runden mit einer Toleranz von 25 Grad. Die Option \u201evirtueller\nRaum\u201c ist ebenfalls in jeder Sitzung mit der Raumfarbe \u201eSoda\u201c aktiviert.\nNachdem alle sechs Sitzungen erfolgreich beendet wurden, wird das Benutzerkonto\nals Json-Datei exportiert. Diese beinhaltet insgesamt 18 Datens\u00e4tze mit den jeweiligen\nAbweichungen und 6 Datens\u00e4tze mit der ben\u00f6tigten Zeit. Die Daten werden dann von\neinem Studienbetreuer ausgelesen und in eine Tabelle eingetragen.\n6.3 Ergebnisse & Vergleich\nAnhand dieser Studie soll ein Vergleich zwischen der Anwendung und den \u00e4hnlichen\nAnwendungen f\u00fcr die anderen Plattformen erm\u00f6glicht werden. F\u00fcr die Auswertung\nwurden alle relevanten Daten aus den Benutzerkonten der 20 Studienteilnehmer, die\nzwischen 18 und 53 Jahren alt sind, herausge\ufb01ltert und tabellarisch festgehalten. Unter\n466.3 Ergebnisse & Vergleich\nden Probanden befanden sich 15 M\u00e4nner sowie 5 Frauen, darunter 6 Personen mit einer\nTinnituserkrankung. Die verwendeten Kopfh\u00f6rertypen beschr\u00e4nkten sich auf In-Ear und\noffene B\u00fcgelkopfh\u00f6rer.\nDer folgende Abschnitt befasst sich mit den Ergebnissen der Studie, die mit den Ergeb-\nnissen der vorherigen Studien verglichen werden.\n6.3.1 Sitzungsdauer\nTabelle 6.1 zeigt die durchschnittliche Dauer der jeweiligen Sitzungen, die unter den\nvorgegebenen Einstellungen abgehalten wurden. In allen Studien erfolgte das Rich-\ntungsh\u00f6ren pro Sitzung jeweils in drei Runden. Da in dieser Studie nicht die Dauer der\neinzelnen Runden sondern nur die ben\u00f6tigte Zeit pro Sitzung erfasst wurde, ist somit\nkein direkter Vergleich m\u00f6glich.\nDauer (in Sekunden) Leicht Normal Schwer\nWald 111,95 134,90 152,00\nB\u00fcro 130,90 131,90 148,45\nTabelle 6.1: Durchschnittliche Dauer der jeweiligen sechs Sitzungen\nDie Probanden der vorherigen Studien ben\u00f6tigten pro Runde zwischen 9,74 und 15,97\nSekunden [ 7]. Somit l\u00e4sst sich trotzdem die Vermutung aufstellen, dass die durchschnitt-\nliche Sitzungsdauer in dieser Studie l\u00e4nger ist als in den vorherigen. Mit einer gemittelten\nGesamtdauer von 809,7 Sekunden wird diese Vermutung bekr\u00e4ftigt.\nAus Tabelle 6.1 l\u00e4sst sich au\u00dferdem entnehmen, dass die Dauer der Sitzungen im\nSchnitt bei steigendem Schwierigkeitsgrad l\u00e4nger wird. Mit Hilfe einer Varianzanalyse\nk\u00f6nnten diese Vermutungen best\u00e4tigt beziehungsweise widerlegt werden. Diese Studie\nbesch\u00e4ftigt sich jedoch lediglich mit dem Vergleich der verschiedenen Plattformen um\nden Rahmen dieser Arbeit nicht zu sprengen.\n476 Studie\n6.3.2 Winkelabweichung\nIn Tabelle 6.2 werden die gemittelten Abweichungen zur tats\u00e4chlichen Schallquelle\ngezeigt. Vergleicht man die Werte mit den Werten aus Tabelle 6.1 erkennt man, dass die\nProbanden im Schnitt l\u00e4nger f\u00fcr Sitzungen mit dem Ger\u00e4usche-Thema \u201eB\u00fcro\u201c ben\u00f6tigten,\njedoch bessere Ergebnisse erzielten.\nWinkel (in Grad) Leicht Normal Schwer\nWald 30,00 34,70 37,29\nB\u00fcro 23,75 25,81 31,16\nTabelle 6.2: Durchschnittliche Abweichung zur tats\u00e4chlichen Schallquelle\nDie durchschnittliche Abweichungen der in den vorherigen Studien verwendeten Ge-\nr\u00e4usche liegt zwischen 13,3 und 55,5 Grad [ 7]. Mit einer gemittelten Abweichung von\n33,99 Grad (Wald) und 26,91 Grad (B\u00fcro) liegen die Ergebnisse dieser Studie im\nMittelfeld.\n6.4 Diskussion\nIm folgenden Abschnitt werden die aus der begleitenden Studie gewonnen Erkenntnisse\nerl\u00e4utert und genauer beschrieben. Au\u00dferdem werden einige Schw\u00e4chen, die bei der\nDurchf\u00fchrung der Studie aufgefallen sind, beschrieben.\n6.4.1 Erkenntnisse\nManche Probanden hatten w\u00e4hrend dem Richtungsh\u00f6ren Probleme mit der Ortung der\nSchallquelle. Bei einigen war die zu \ufb01ndende Ger\u00e4uschquelle teilweise nur auf dem\nrechten Ohr wahrzunehmen und ver\u00e4nderte sich bei einer Drehung nur minimal oder\ngar nicht. Bei anderen wiederum traten keinerlei Probleme auf, was die Trefferzahlen\nwiederspiegeln (siehe Abbildung 6.1). Der Grund f\u00fcr das Problem konnte jedoch nicht\n486.4 Diskussion\naus\ufb01ndig gemacht werden, jedoch k\u00f6nnte eine Aktualisierung der Google VR API Abhilfe\nschaffen, da inzwischen eine \u00fcberarbeitete Version verf\u00fcgbar ist.\n02468101214161820\n1 2 3 4 5 6 7 8 910 11 12 13 14 15 16 17 18 19 20\nTreffer Fehler\nAbbildung 6.1: Anzahl der Treffer und Fehler der einzelnen Studienteilnehmer\nTrotz einiger Problemen waren alle Studienteilnehmer sehr auf das Richtungsh\u00f6ren\nkonzentriert. Ein paar der von Tinnitus betroffenen Probanden berichteten sogar, dass\nsie den Tinnitus w\u00e4hrend der auditiven Stimulation nicht mehr wahrgenommen haben.\nAndere konnten jedoch keine Verbesserung w\u00e4hrend den Sitzungen wahrnehmen.\nDie Anwendung wurde stichprobenartig auf den Smartphones einiger Probanden in-\nstalliert. Dabei stellte sich heraus, dass viele Ger\u00e4te nicht kompatibel waren, da die\nben\u00f6tigten Sensoren fehlten. Somit kann die Anwendung nicht auf jedem beliebigen\nAndroid Smartphone verwendet werden.\nAlles in allem schnitt die Anwendung beim Vergleich nur mittelm\u00e4\u00dfig ab. Dadurch, dass\nsich Implementierung sowie Studiendesign teilweise unterscheiden, k\u00f6nnen sich auch\ndie erhobenen Daten unterscheiden. Neben den eben genannten Problemen sorgten\nm\u00f6glicherweise auch weitere Faktoren dazu, dass manche Probanden sehr lange\nben\u00f6tigten und teilweise sehr gro\u00dfe Abweichungen erzielten. Die Probleme werden im\nfolgenden Abschnitt beschrieben.\n496 Studie\n6.4.2 Schwachstellen der Studie\nDadurch, dass die Studie ohne Google Cardboard durchgef\u00fchrt wurde, nahmen die\nProbanden sowohl den virtuellen Raum als auch die reale Umgebung wahr. Einige\nberichteten, dass sie teilweise die Schallquelle anhand verschiedener Merkmale im\nrealen Raum orteten. Dies f\u00fchrte dazu, dass sie sich nicht genug auf die Ger\u00e4usche\nkonzentrierten und dadurch h\u00e4u\ufb01g Fehler durch gro\u00dfe Abweichungen erzielten.\nAu\u00dferdem waren viele Studienteilnehmer am Anfang mit dem neuartigen Bedienkonzept\n\u00fcberfordert. Zus\u00e4tzlich wussten einige Probanden nicht welches Ger\u00e4usch sie orten\nsollen. Dadurch fallen die ersten Sitzungen der meisten Teilnehmer schlechter aus als\ndie restlichen. Eine pr\u00e4zisere Einf\u00fchrung kann in diesem Fall Abhilfe f\u00fcr dieses Problem\nschaffen. Durch die zuf\u00e4llige Reihenfolge konnte dieses Problem minimiert, aber nicht\neliminiert werden.\nEinige Probanden neigten dazu sich schnell und ruckartig zu drehen. Dadurch wird die\nPositionserkennung unpr\u00e4zise und eine \ufb02\u00fcssige Wiedergabe der virtuellen Umgebung\nauf dem Bildschirm ist nicht mehr m\u00f6glich. Zus\u00e4tzlich kann der Studienteilnehmer den\nWendepunkt verpassen, bei dem das Ger\u00e4usch die Kopfh\u00f6rerseite wechselt. Somit\nwird das Richtungsh\u00f6ren vom Proband selbst deutlich erschwert und erzielt dadurch\nschlechtere Ergebnisse. Dieses Problem kann ebenfalls durch eine pr\u00e4zisere Einf\u00fchrung\numgangen werden.\nDes Weiteren wurde die Studie an mehreren Orten durchgef\u00fchrt, an denen teilweise\ndas Richtungsh\u00f6ren durch Umgebungsger\u00e4usche erschwert wurde. Viele Probanden\nbevorzugten die offenen B\u00fcgelkopfh\u00f6rer, die das Ohr nicht komplett abdecken. Somit\nnimmt der H\u00f6rer neben den Ger\u00e4uschen aus dem Kopfh\u00f6rer weitere Ger\u00e4usche aus der\nUmgebung wahr. Probanden die lieber die In-Ear-Kopfh\u00f6rer bevorzugten nahmen diese\nSt\u00f6rger\u00e4usche nicht wahr.\n507\nZusammenfassung\nIm Rahmen dieser Bachelorarbeit entstand eine mobile Anwendung f\u00fcr Android Smart-\nphones, die sich auf die Zielgruppe der von Tinnitus betroffenen Menschen spezialisiert.\nZiel dieser Anwendung ist es die Tinnitus-Belastung der betroffen Personen spielerisch\nzu verbessern. Durch gezielte auditive Stimulation soll der Tinnitus f\u00fcr kurze Zeit vom\nBenutzer nicht mehr wahrgenommen werden. Dies erfolgt in Form eines kleinen Spiels,\nin dem verschiedene Ger\u00e4usche um den Benutzer platziert werden, die \u00fcber Kopfh\u00f6rer\nwahrgenommen werden k\u00f6nnen. Die Aufgabe des Spielers besteht darin, die Richtung\neiner bestimmten Schallquelle zu lokalisieren, indem er sich in eine beliebige Richtung\ndreht. Dieses neuartige Bedienkonzept wurde verwendet um die Anwendung auch f\u00fcr\nGoogle Cardboard kompatibel zu machen.\nDie Anwendung speichert w\u00e4hrend einer Sitzung verschiedene Daten in einer Json-Datei,\ndie ein sp\u00e4teres Auswerten, beispielsweise in Form einer Studie, erm\u00f6glichen. Anhand\nder erhobenen Daten k\u00f6nnen zum Beispiel Schlussfolgerungen \u00fcber die r\u00e4umliche\nH\u00f6rf\u00e4higkeit des Benutzers gezogen werden.\nEine begleitende Studie machte sich genau diese Daten zunutze und erm\u00f6glichte einen\nVergleich mit anderen Anwendungen, in denen dieses Konzept ebenfalls umgesetzt\nwurde. Durch die Studie konnten zus\u00e4tzlich hilfreiche Erkenntnisse gewonnen werden,\ndie zu einer potentiellen Verbesserung der Anwendung f\u00fchren k\u00f6nnen.\nIm folgenden Abschnitt werden Verbesserungsm\u00f6glichkeiten, die eine sinnvolle Erweite-\nrung f\u00fcr die Anwendung darstellen, genauer beschrieben.\n517 Zusammenfassung\n7.1 Ausblick\nDie aus der Anwendung gewonnen Erkenntnisse bilden den Grundstein f\u00fcr eine mobile\nAnwendung, die t\u00e4glich das Leben vieler von Tinnitus betroffener Menschen erleichtern\nk\u00f6nnte. Mit Hilfe vieler sinnvoller Erweiterungen k\u00f6nnte die Anwendung den von Tinnitus\nbetroffenen Personen besser helfen.\nErweitert man die Anwendung mit der M\u00f6glichkeit bestimmte Frequenzbereiche aus den\nabgespielten Ger\u00e4uschen herauszu\ufb01ltern, k\u00f6nnte die Tinnitus-Retraining-Therapie mit\ndem Tailor-Made Notched Musik Training kombiniert werden. Dadurch k\u00f6nnte m\u00f6glicher-\nweise die Tinnitus-Belastung der betroffenen Personen weiter verbessert werden. Leider\nkann dieses Konzept beim subjektiven Tinnitus noch nicht verfolgt werden, da die T\u00f6ne\nnicht auf eine physikalische Schallquelle zur\u00fcckzuf\u00fchren sind. Beim objektiven Tinnitus\nhingegen w\u00e4re diese Erweiterung optimal, da die Frequenzbereiche gemessen werden\nk\u00f6nnen.\nAu\u00dferdem k\u00f6nnte ein weiterer Ansatz mit Hilfe eines Frequenzgenerators realisiert\nwerden, der es erm\u00f6glicht T\u00f6ne in bestimmten Frequenzbereichen wiederzugeben.\nDadurch k\u00f6nnen die Frequenzen so gew\u00e4hlt werden, dass sie den Tinnitus \u00fcberdecken\nund dieser vom Benutzer nicht mehr wahrgenommen werden kann. In Kombination\nmit dem Richtungsh\u00f6ren k\u00f6nnen dadurch m\u00f6glicherweise bessere Ergebnisse erzielt\nwerden als mit zuf\u00e4llig gew\u00e4hlten Ger\u00e4uschen. Die Google VR API unterst\u00fctzt die\nErzeugung von Frequenzen nicht, jedoch kann beispielsweise eine tempor\u00e4re Audio-\nDatei erstellt werden, die genau diese Frequenz wiedergibt. Diese Datei kann dann mit\nder GvrAudioEngine geladen werden, die die Wiedergabe der Frequenzen erm\u00f6glicht.\nDamit die Anwendung auch einen Anreiz f\u00fcr die tats\u00e4chliche Verwendung von Google\nCardboard bietet, sollte die Anwendung dem Benutzer w\u00e4hrend dem Richtungsh\u00f6ren\neine zum Ger\u00e4usche-Thema passende virtuelle Welt anzeigen. Die virtuelle Umgebung\nk\u00f6nnte beispielsweise mit Hilfe eines Panoramabilds realisiert werden, welches dann auf\ndem Bildschirm ausgegeben wird. Ein weiterer Vorteil von Google Cardboard ist, dass\nder Benutzer die reale Welt optisch nicht mehr wahrnimmt und sich somit voll und ganz\nauf die virtuelle Welt und deren dazugeh\u00f6rigen Ger\u00e4usche konzentrieren kann.\n527.1 Ausblick\nDurch die Bereitstellung eines \u201eCreator Tools\u201c kann zus\u00e4tzlich die Langzeitmotivation\nder Benutzer gefordert werden. Das Tool soll die selbstst\u00e4ndige Gestaltung der vir-\ntuellen Umgebung mitsamt dem passenden Ger\u00e4usche-Thema f\u00fcr den Endbenutzer\nerm\u00f6glichen. Die erstellten Welten k\u00f6nnen dann mit anderen Benutzern geteilt werden,\ndie diese Welt selbst verwenden und bewerten k\u00f6nnen. Dadurch kann schnell eine\nGemeinschaft entstehen, die immer wieder neue Welten zum Vorschein bringt. Die\nBereitstellung solcher Funktionalit\u00e4ten birgt nat\u00fcrlich immer die Gefahr, dass ungewoll-\nte Inhalte entstehen, die nicht dem Zweck dieser Anwendung entsprechen. Alternativ\nk\u00f6nnte ein Download-Portal erstellt werden, in dem vom Entwickler erstellte Welten zum\nDownload bereitgestellt werden.\nZus\u00e4tzlich k\u00f6nnte ein Cloud-Speicher bereitgestellt werden, der alle Benutzerdaten sowie\ndie erstellten Welten zentral speichert. Somit haben Benutzer von \u00fcberall einfachen und\nschnellen Zugriff auf ihre Daten und haben die M\u00f6glichkeit im Falle eines Datenverlustes\nverlorene Daten wiederherzustellen. Dabei muss beachtet werden, dass es sich um\nmedizinische Datens\u00e4tze handelt und dadurch eine verschl\u00fcsselte Verbindung zum\nServer ben\u00f6tigt wird. Sensible Daten sollten au\u00dferdem verschl\u00fcsselt werden, damit\ndiese nicht von unbefugten Personen eingesehen werden k\u00f6nnen.\nDurch die Unterst\u00fctzung weiterer Plattformen wie iOS und WindowsPhone k\u00f6nnen die\nvon Tinnitus betroffenen Personen auch unterwegs die Anwendung zur Verbesserung\nder Tinnitus-Belastung verwenden.\n53Literaturverzeichnis\n[1]Kreuzer, P .M., Vielsmeier, V., Langguth, B.: Chronic tinnitus: an interdisciplinary\nchallenge. Dtsch Arztebl Int 110(2013) 278\u201384\n[2]Initiaive, T.R.: Track your Tinnitus. https://www.trackyourtinnitus.org\n(2017) Eingesehen am 15.03.2017.\n[3]Breithut, J.: In dieser App kommen Zombies durch den\nKopfh\u00f6rer. http://www.spiegel.de/netzwelt/games/\naudio-defence-zombie-arena-fuer-ios-a-1000419.html (2017)\nEingesehen am 15.03.2017.\n[4]Blome, J.D.: Implementation and evaluation of a mobile android application for\nauditory stimulation of chronic tinnitus patients. (2015)\n[5]Henkel, F .: Implementation and evaluation of a mobile web application for auditory\nstimulation of chronic tinnitus patients. (2015)\n[6]Mayer, S.: Implementation and evaluation of a mobile ios application for auditory\nstimulation of chronic tinnitus patients. (2015)\n[7]Weidhaas, M.: Implementation and evaluation of a mobile windows-application for\nauditory stimulation of chronic tinnitus patients. (2015)\n[8]Google: Google VR SDK for Android. https://developers.google.com/vr/\nandroid/ (2017) Eingesehen am 06.03.2017.\n[9]Schobel, J., Schickler, M., Pryss, R., Nienhaus, H., Reichert, M.: Using vital sensors\nin mobile healthcare business applications: Challenges, examples, lessons learned.\nIn: 9th Int\u2019l Conference on Web Information Systems and Technologies (WEBIST\n2013), Special Session on Business Apps. (2013) 509\u2013518\n[10] GmbH, T.Z.S.: Alles \u00fcber Tinnitus. http://www.tinnitus-zentrum.ch/\nindex.php?option=com_content&view=article&id=3&Itemid=9 (2017)\nEingesehen am 17.03.2017.\n55Literaturverzeichnis\n[11] Tinnitracks: Tinnitus-Symptome. http://www.tinnitracks.com/de/\ntinnitus/symptome (2017) Eingesehen am 17.03.2017.\n[12] Goebel, G., B\u00fcttner, U.: Grundlagen zu tinnitus: Diagnostik und therapie. psycho-\nneuro 30(2004) 322\u2013329\n[13] Tinnitracks: Objektiver Tinnitus. http://www.tinnitracks.com/de/\ntinnitus/objektiver-tinnitus (2017) Eingesehen am 17.03.2017.\n[14] Tinnitracks: Behandlung von Tinnitus. http://www.tinnitracks.com/de/\ntinnitus/behandlung (2017) Eingesehen am 17.03.2017.\n[15] e.V., D.T.L.: Tailor-made notched music training (TMNMT). http:\n//www.tinnitus-liga.de/pages/presse/pressemitteilungen/\narchiv/tinnitracks.php (2017) Eingesehen am 17.03.2017.\n[16] e.V., D.T.L.: Tinnitus-Retraining-Therapie. http://www.tinnitus-liga.\nde/pages/tinnitus-sonstige-hoerbeeintraechtigungen/tinnitus/\ntinnitus-retraining-therapie.php (2017) Eingesehen am 17.03.2017.\n[17] In: Virtuelle Realit\u00e4t. Springer Berlin Heidelberg, Berlin, Heidelberg (2009) 5\u201343\n[18] Google: Google Cardboard. https://vr.google.com/cardboard/ (2017)\nEingesehen am 15.03.2017.\n[19] Staff, P .S.: Google Cardboard Is Virtual Reality On A Budget. http://www.\npopsci.com/google-cardboard (2017) Eingesehen am 18.03.2017.\n[20] Technologies, U.: Unity3D. https://unity3d.com/de (2017) Eingesehen am\n19.03.2017.\n[21] Games, E.: Unreal Engine. https://www.unrealengine.com/ (2017) Einge-\nsehen am 19.03.2017.\n[22] Group, K.: OpenGL ES. https://www.khronos.org/opengles/ (2017) Ein-\ngesehen am 19.03.2017.\n[23] Google: Google VR SDK - GvrAudioEngine. https://developers.\ngoogle.com/vr/android/reference/com/google/vr/sdk/audio/\nGvrAudioEngine (2017) Eingesehen am 06.03.2017.\n56Literaturverzeichnis\n[24] Google: Gson API - Konvertierung von Java Objekten in JSON. https://github.\ncom/google/gson (2017) Eingesehen am 02.03.2017.\n[25] Google: Launch Screen Pattern - Material Design Guidelines. https://\nmaterial.io/guidelines/patterns/launch-screens.html (2017) Ein-\ngesehen am 03.03.2017.\n[26] Oracle: Java Mail API. http://www.oracle.com/technetwork/java/\njavamail/index.html (2017) Eingesehen am 03.03.2017.\n[27] Miller, D.: Bcrypt. http://www.mindrot.org/projects/jBCrypt/ (2017)\nEingesehen am 05.03.2017.\n[28] Jahoda, P .: MPAndroidChart. https://github.com/PhilJay/\nMPAndroidChartl (2017) Eingesehen am 03.03.2017.\n[29] Google: AlarmManager. https://developer.android.com/reference/\nandroid/app/AlarmManager.html (2017) Eingesehen am 05.03.2017.\n[30] Google: Google VR SDK - GvrView. https://developers.google.com/vr/\nandroid/reference/com/google/vr/sdk/base/GvrView (2017) Eingese-\nhen am 06.03.2017.\n[31] Google: Google VR SDK - VrPanoramaView. https://developers.google.\ncom/vr/android/reference/com/google/vr/sdk/widgets/pano/\nVrPanoramaView (2017) Eingesehen am 06.03.2017.\n[32] Google: TextToSpeech Engine. https://developer.android.com/\nreference/android/speech/tts/TextToSpeech.html (2017) Eingese-\nhen am 06.03.2017.\n[33] Google: Material Design Guidelines. https://material.io/guidelines/\n(2017) Eingesehen am 06.03.2017.\n[34] Google: Android Support Library. https://developer.android.com/\ntopic/libraries/support-library/index.html (2017) Eingesehen am\n06.03.2017.\n57Literaturverzeichnis\n[35] Schobel, J., Schickler, M., Pryss, R., Maier, F ., Reichert, M.: Towards process-driven\nmobile data collection applications: Requirements, challenges, lessons learned.\nIn: 10th Int\u2019l Conference on Web Information Systems and Technologies (WEBIST\n2014), Special Session on Business Apps. (2014) 371\u2013382\n58A\nQuelltexte\n1{\n2 \"id\" : String,\n3 \"firstName\" : String,\n4 \"lastName\" : String,\n5 \"gender\" : Boolean,\n6 \"birthdate\" : Date,\n7 \"email\" : String,\n8 \"password\" : String,\n9 \"history\" : {\n10 \"statistics\" : [ Statistic ]\n11 }\n12}\nListing A.1: Benutzerdaten im Json-Format\n1{\n2 \"startTime\" : Date,\n3 \"endTime\" : Date,\n4 \"rounds\" : Integer,\n5 \"tolerance\" : Float,\n6 \"difficulty\" : Integer,\n7 \"runs\" : [{\n8 \"round\" : Integer,\n9 \"deviation\" : Float,\n10 \"isHit\" : Boolean,\n11 \"rotationHistory\" : {\n12 \"history\" : [{\n13 \"item\" : {\n14 \"timestamp\" : Long,\n15 \"rotation\" : Float\n59A Quelltexte\n16 }\n17 }]\n18 }\n19 }]\n20}\nListing A.2: Statistiken im Json-Format\n1public class Soda extends Application {\n2\n3 private static Soda instance = new Soda();\n4\n5 private User loggedInUser;\n6 private VrSettings vrSettings;\n7 private Reminder reminder;\n8 private List<OnSodaChangeListener> mSodaListeners;\n9 private List<OnReminderChangeListener> mReminderListeners;\n10\n11 /**\n12 *Private Constructor.\n13 */\n14 private Soda() {\n15 // Required empty constructor\n16 }\n17\n18 /**\n19 *Returns the Instance of this Class.\n20 */\n21 public static synchronized Soda getInstance() {\n22 return instance;\n23 }\n24\n25 ...\n26}\nListing A.3: Ausschnitt aus der Singelton Klasse der Anwendung\n1@Override\n2protected void onResume() {\n3 super .onResume();\n604 // Check Singleton Instance\n5 UserUtil.logInCurrentUser(mContext, new UserUtil.OnLoginListener() {\n6 @Override\n7 public void onLoginComplete(User user, int status) {\n8 if(status == UserUtil.STATUS_SUCCESS) {\n9 // No Error, do something\n10 }else {\n11 // Error, logout current User and return to Login Screen\n12 }\n13 }\n14 });\n15}\nListing A.4: \u00dcberpr\u00fcfung des Singeltons mit Hilfe der UserUtil Klasse\n1public class ReminderReceiver extends WakefulBroadcastReceiver {\n2\n3 public static final String ACTION_REMIND = \"action_remind\";\n4\n5 @override\n6 public void onReceive(Context context, Intent intent) {\n7 if(intent != null && intent.getAction.equals(ACTION_REMIND); {\n8 // Do something\n9 }\n10 }\n11}\nListing A.5: Abfangen eines Broadcast in der ReminderReceiver Klasse\n61B\nFragebogen der begleitenden Studie\n63Fakult\u00e4t f\u00fcr Ingenieurwissenschaften, Informatik und Psychologie\nInstitut f\u00fcr Datenbanken und Informationssysteme\nFragebogen\nzur Evaluierung von auditivier Stimulation mit Hilfe einer  \nSound Origin Direction Applikation \nf\u00fcr die Android Plattform\n1. Basisdaten\nID:\nGeschlecht:Alter:\nm\u00e4nnlich weiblichJeder Studienteilnehmer f\u00fcllt zuerst diesen Fragebogen aus. Danach erstellt \ner \u00fcber die Anwendung ein neues Benutzerkonto, mit dem dann 6 unter -\nschiedliche Sitzungen in randomisierter Reihenfolge erfolgen. Die genaue \nReihenfolge erh\u00e4lt der Teilnehmer \u00fcber einen Studienbetreuer. \nIn den 6 Sitzungen werden jeweils folgende Einstellungen \u00fcbernommen:\n1. Schwierigkeitsgrad : leicht,  Ger\u00e4usche-Thema : Wald\n2. Schwierigkeitsgrad : normal,  Ger\u00e4usche-Thema : Wald\n3. Schwierigkeitsgrad : schwer,  Ger\u00e4usche-Thema : Wald\n4. Schwierigkeitsgrad : leicht,  Ger\u00e4usche-Thema : B\u00fcro\n5. Schwierigkeitsgrad : normal,  Ger\u00e4usche-Thema : B\u00fcro\n6. Schwierigkeitsgrad : schwer  Ger\u00e4usche-Thema : B\u00fcro\nJede Sitzung erfolgt in 3 Runden  mit einer Toleranz von 25 Grad . Die Opti -\non \u201evirtueller Raum\u201c ist ebenfalls in jeder Sitzung mit der Raumfarbe \u201eSoda\u201c \naktiviert.\nNachdem alle Sitzungen erfolgreich beendet wurden, erfolgt ein Export  des \nBenutzerkontos, indem der Teilnehmer \u00fcber \u201emein Konto\u201c das Konto als \nJson-Datei auf dem Ger\u00e4t speichert.\n(wird von einem Studienbetreuer nachtr\u00e4glich eingetragen)5. Welcher Kopfh\u00f6rertyp wird bei den Sitzungen verwendet?\nEarbuds In-Ear\nB\u00fcgelkopfh\u00f6rer: offen geschlossenOhrh\u00f6rer:\n6. Wie viel Erfahrung haben Sie mit Videospielen?\nwenig\n2 3 4 5viel\n1\nIch wurde vom Versuchsleiter \u00fcber den Ablauf der Studie aufgekl\u00e4rt und bin damit einverstanden, \ndass im Rahmen dieser Studie erhobene personengebundene Daten in anonymisierter Form f\u00fcr \nwissenschaftliche Zwecke verwendet werden.\nMir ist bekannt, dass ich meine Einwilligung jederzeit ohne Angabe von Gr\u00fcnden und ohne nach -\nteilige Folgen f\u00fcr mich zur\u00fcckziehen und einer Weiterverarbeitung meiner Daten jederzeit wider -\nsprechen und ihre L\u00f6schung bzw. Vernichtung verlangen kann.\nDatum, Ort, Unterschrift2. Haben Sie Tinnitus oder andere Erkrankungen bez\u00fcglich ihres Geh\u00f6rs?\n3. Wie viel Erfahrung haben Sie mit der Verwendung mobiler Ger\u00e4te?\nwenig\n2 3 4 5viel\n4. Welches Smartphone verwenden Sie \u00fcblicherweise ?1Abbildungsverzeichnis\n2.1 Google Cardboard [19] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6\n2.2 Ambisonics-Technologie [23] . . . . . . . . . . . . . . . . . . . . . . . . . 8\n2.3 Re\ufb02exion von Schallwellen in der virtuellen Umgebung [23] . . . . . . . . 9\n4.1 Software-Architektur der Anwendung . . . . . . . . . . . . . . . . . . . . . 17\n4.2 Konzept der Anwendung . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n4.3 Datenmodell der Anwendung . . . . . . . . . . . . . . . . . . . . . . . . . 21\n4.4 \u00dcbersicht \u00fcber alle erstellten Activities . . . . . . . . . . . . . . . . . . . . 23\n4.5 Mockup vs. Screenshot: LoginActivity . . . . . . . . . . . . . . . . . . . . 24\n4.6 Mockup vs. Screenshot: OverviewActivity . . . . . . . . . . . . . . . . . . 26\n4.7 Mockup vs. Screenshot: AccountActivity . . . . . . . . . . . . . . . . . . . 28\n4.8 Screenshot: InstructionActivity . . . . . . . . . . . . . . . . . . . . . . . . 30\n4.9 Screenshot: VrSettingsActivity . . . . . . . . . . . . . . . . . . . . . . . . 31\n4.10 Screenshot: SodaActivity . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n4.11 Erlauben der Installation externer Anwendungen . . . . . . . . . . . . . . 35\n6.1 Anzahl der Treffer und Fehler der einzelnen Studienteilnehmer . . . . . . 49\n67Tabellenverzeichnis\n3.1 Einstellungsm\u00f6glichkeiten f\u00fcr das Richtungsh\u00f6ren . . . . . . . . . . . . . 13\n3.2 Schwierigkeitsgrade f\u00fcr das Richtungsh\u00f6ren . . . . . . . . . . . . . . . . . 14\n4.1 Systemanforderungen der Anwendung . . . . . . . . . . . . . . . . . . . . 34\n5.1 Anforderungsableich: funktionale Anforderungen . . . . . . . . . . . . . . 37\n5.2 Anforderungsableich: nicht-funktionale Anforderungen . . . . . . . . . . . 41\n6.1 Durchschnittliche Dauer der jeweiligen sechs Sitzungen . . . . . . . . . . 47\n6.2 Durchschnittliche Abweichung zur tats\u00e4chlichen Schallquelle . . . . . . . 48\n69Name: Lukas St\u00f6ferle Matrikelnummer: 829033\nErkl\u00e4rung\nIch erkl\u00e4re, dass ich die Arbeit selbstst\u00e4ndig verfasst und keine anderen als die angege-\nbenen Quellen und Hilfsmittel verwendet habe.\nUlm, den . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nLukas St\u00f6ferle", "language": "PDF", "image": "PDF", "pagetype": "PDF", "links": "PDF"}
{"title": "Exercise 1.2: Relational Database Systems 1 - PDFCOFFEE.COM", "author": "Guest", "url": "https://pdfcoffee.com/exercise-12-relational-database-systems-1-pdf-free.html", "hostname": "pdfcoffee.com", "description": "Exercise 1.2 \u2022 What is a Database (DB) ? \u2013 Collection of related data \u2013 Represents some aspects of the real world \u2013 Data...", "sitename": "PDFCOFFEE.COM", "date": "2020-07-02", "id": null, "license": null, "body": null, "comments": "", "commentsbody": null, "raw_text": null, "text": "Exercise 1.2 \u2022 What is a Database (DB) ? \u2013 Collection of related data \u2013 Represents some aspects of the real world \u2013 Data\nViews 121 Downloads 48 File size 4MB\n! ! \" $ % ( & -, . /- , & ! \" '# ) * ++, $ + +* )+ + *+ # ! \"# %$& ' # ( ) *# # # $ +* !( ! 0 # ! * $ %\n57 2 6MB Read more\nKarakteristik relational database 1. data selalu dalam bentuk tabel; ciri tabel ada kolom dan baris. kolom dalam tabel d\n39 0 170KB Read more\nRelational Database Management System Material | Tamim DBA's Blog 1 of 38 https://tamimdba.wordpress.com/relational-da\n32 1 193KB Read more\nExercise 1.2 \u2022 What is a Database (DB) ? \u2013 Collection of related data \u2013 Represents some aspects of the real world \u2013 Data is logically coherent \u2013 Is provided for\u2026\nRelational Database Systems 1\n\u2022 \u2026an intended group of users and \u2022 \u2026applications\nWolf-Tilo Balke Joachim Selke Christoph Lofi Institut f\u00fcr Informationssysteme Technische Universit\u00e4t Braunschweig www.ifis.cs.tu-bs.de\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nExercise 1.2\nExercise 1.3\n\u2022 What is a DBMS ? What do you use it for?\n1. Are the following features provided by a FS, a DB or both ?\n\u2013 A collection of programs to maintain a database \u2013 Used for: \u2022 \u2022 \u2022 \u2022 \u2022 \u2022\n2\n\u2013 \u2013 \u2013 \u2013\nDefinition of Data and Structure Physical Construction Manipulation Sharing/Protecting Persistence/Recovery \u2026\nSimple and fast data access: FS, DB Controlled redundancy: DB Sophisticated enforcement of standards: DB Backup and recovery: DB\n\u2022 Example scenarios? \u2013 Selling tickets, managing a course of study, \u2026 Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nExercise 1.4\nExercise 1.5\n1. What is redundancy? \u2022 \u2022\nWhich users groups interact with a running DBMS?\nThe same information is stored several times Stored information could be derived from already existing data\n2. What are the two main disadvantages of redundancy? \u2022 \u2022\nWaste of storage space Problems in consistently updating data\n3. What is the advantage of redundancy? \u2022 \u2022\nSpeed up data access Use case: For each railroad station and train, precompute the list of all reasonable connecting trains! (This information will be accessed very often but changes rarely) Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n4\n5\n\u2013 \u2013 \u2013 \u2013 \u2013 \u2013 \u2013\nDatabase administrators Database designers Application programmers DBMS designers and implementers Tool developers Operators and maintenance personnel End users (na\u00efve, sophisticated, casual)\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n6\nExercise 1.6\nExercise 1.6 Briefly define the following terms:\nBriefly define the following terms:\n\u2013 Data Model:\n\u2013 Declarative Querying\n\u2022 A data model is an abstract model that describes how data is represented and accessed \u2022 Three parts:\n\u2022 Specify what you want, not how and from where to get it \u2022 No need to know position of files etc. \u2022 No need to know implementation details\n\u2013 Integrity \u2013 Structure \u2013 Manipulation\n\u2013 View\n\u2022 Usually represented by three schemas (each schema respecting the three model parts)\n\u2022 Create a different perspective of the data by\n\u2013 Logical Schema \u2013 Conceptual Schema \u2013 Physical Schema\n\u2013 Restricting the accessible information \u2013 Deriving additional, virtual information\n\u2022 Well defined structures support understanding/communication \u2022 The use of a complete model makes sure the designed system can be implemented\n\u2022 This allows for customization of the accessible data for specific user-groups 7\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n8\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nData Modeling\n1. Database Applications\n\u2022 Introduction \u2022 Basic ER Modeling\n\u2022 Database applications consist of \u2013 Database instances with their respective DBMS \u2013 associated application programs interfacing with the users\n\u2013 Chen notation \u2013 Alternative notations\nApp1\nDBMS\n\u2022 Example App2\nApp3\n9\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n1. Database Applications\n\u2013 Requirements Engineering \u2013 Conceptional Design \u2013 Application Design \u2013\u2026\n10\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n\u2022 DB Design models a miniworld into a formal representations \u2013 Restricted view on the real world with respect to the problems that the current application should solve\n\u2022 Software engineers and data engineers cooperate tightly in planning the need, use and flow of data\nMiniworld\nInformation Dependencies\n\u2013 Data modeling \u2013 Database design Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nDB2\n1. Universe of Discourse\n\u2022 Planning and developing application programs traditionally is a software engineering problem\nEN 3\nEN 3\nDB1\nThings\n11\nProperties\nDatabase Operations\nFacts\nRelationships\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n12\n1. Phases of DB Design\n1. Phases of DB Design\nMiniworld\nFunctional Requirements\nRequirements Analysis\n\u2022 Requirements Analysis \u2013 Database designers interview prospective users and stakeholders \u2013 Data requirements describe what kind of data is needed \u2013 Functional requirements describe the operations performed on the data\nthis lecture\nData Requirements Functional Analysis\nConceptual Design High Level Transaction Specification\nDBMS independent\nConceptual Schema\nLogical Design\nDBMS dependent\nApplication Program Design\n\u2022 Functional Analysis\nLogical Schema\n\u2013 Concentrates on describing high-level user operations and transactions\nPhysical Design Transaction Implementation\nInternal Schema\n\u2022 Does also not contain implementation details \u2022 Should be matched versus conceptual model\nApplication Programs\nEN 3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n13\nEN 3\n1. Phases of DB Design\n1. Phases of DB Design\n\u2022 Conceptual Design\n\u2022 While modeling the data, design phases have to be completed\n\u2013 Transforms data requirements to conceptual model \u2013 Conceptual model describes data entities, relationships, constraints, etc. on high-level\n\u2022 The result of one phases serves as input for the next phase \u2022 Often, automatic transition is possible with some additional designer feedback\n\u2022 Does not contain any implementation details \u2022 Independent of used software and hardware\n\u2022 Logical Design \u2013 Maps the conceptual data model to the logical data model used by the DBMS\nconceptual design\n\u2022 e.g. relational model, hierarchical model, \u2026 \u2022 Technology independent conceptual model is adapted to the used DBMS software\n\u2022 Physical Design\nERdiagram UML,\u2026\n\u2013 Creates internal structures needed to efficiently store/manage data \u2022 Table spaces, indexes, access paths, \u2026 \u2022 Depends on used hardware and DBMS software EN 3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n14\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n15\nlogical design\nphysical design\ntables, columns,\u2026\ntablespaces, Indexes,\u2026\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n2. ER Modeling\n16\n2. ER - Entities\n\u2022 Traditional approach to Conceptual Modeling\n\u2022 Entities\n\u2013 Entity-Relationship Models (ER-Models)\n\u2013 An entity represents a \u201cthing\u201d in the real world with an independent existence\n\u2022 Also known as Entity-Relationship Diagrams (ERD) \u2022 Introduced in1976 by Peter Chen \u2022 Graphical representation\n\u2022 An entity has an own identity and represents just one thing\n\u2022 Top-Down-Approach for modeling\n\u2013 Example: a car, a savings account, my neighbor\u201fs house, the cat \u201cSnowflake\u201d, a product, \u2026\n\u2013 Entities and Attributes \u2013 Relationships \u2013 Constraints\n\u2022 Some derivates became popular \u2013 ER Crow\u201fs Foot Notation (Bachman Notation) \u2013 ER Baker Notation \u2013 Later: Unified Modeling Language (UML) Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n17\nEN 3.3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n18\n2. ER - Attributes\n2. ER \u2013 Entity Types\n\u2022 Attributes\n\u2022 Entity Types are sets of entities sharing the same characteristics or attributes\n\u2013 A property of an entity, entity type or a relationship type. \u2013 Example: name of an employee, color of a car, balance of an account, location of a house,\u2026 \u2013 Attributes can be classified as being: \u2022 \u2022 \u2022 \u2022\n\u2022 Each entity within the set has its own values\n\u2013 Each entity type is described by its name and attributes \u2022 Each entity is an instance of an entity type\n\u2013 Describes the so called schema or intension of similar entities\nsimple or composite single-valued or multi-valued stored or derived Example: name of a cat is simple, single-valued, and stored\nEN 3.3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n19\nEN 3.3\n2. ER \u2013 Entity Sets\n2. ER Diagrams\n\u2022 An Entity Set is the collection of all entities of a given entity type \u2013 Entity sets often have the same name as the entity type\n\u2022 ER diagrams represent entity types and relationships among them, not single entities \u2022 Graphical Representation \u2013 Entity Type\n\u2022 Cat may refer to the entity type as well as to the set of all Cat entities (sometimes also plural for the set: Cats)\nEntityType name\n\u2013 Also called the extension of an entity type (or instance)\nattribute n\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n21\nEN 3.3\n\u2022 Simple Attribute: \u2013 Attribute composed of a single component with an independent existence \u2013 Example: name of a cat, salary of an employee,\u2026\n\u2013 Entity Types \u2022 Written as: EntityName (attribute1, attribute2, \u2026)\n\u2013 Entity\n\u2022 Cat (name), Employee(salary),\u2026\n\u2022 Written as: (value of attribute1, value of attribute2, \u2026)\n\u2022 Composite Attribute:\n\u2022 Example \u2013 Entity Set Cats \u2022 \u2022 \u2022 \u2022\n22\n2. ER \u2013 Composite Attributes\n\u2022 Textual Representation\n\u2022 Cat (name, color)\nEntityType name \u2022 Oval labeled with the name of the attribute \u2022 Usually, name starts with lower case letters\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n2. ER Diagrams\n\u2013 Entity Type Cat\n\u2022 Rectangle labeled with the name of the entity \u2022 Usually, name starts with capital letters\n\u2013 Attributes attribute 1\nEN 3.3\n20\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n\u2013 Attribute composed of multiple components, each with an independent existence\nname\n\u2022 Graphically represented by connecting sub-attributes to main attribute \u2022 Textually represented by grouping sub-attributes in ()\nCat color\n\u2013 Example: address attribute of a company (is composed of street, house number, ZIP, city, and country)\n(Fluffy, black-white) (Snowflake, white) (Captain Hook, red) \u2026\n\u2022 Company (address(street, houseNo, ZIP, city))\nhouseNo\nCat\nname\nSimple Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nstreet\n23\nEN 3.3\nCompany\naddress\nComposite\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nZIP city 24\n2. ER \u2013 Derived Attributes\n2. ER Multi-Valued Attributes\n\u2022 Stored Attribute\n\u2022 Single-Valued Attribute \u2013 Attribute holding a single value for each occurrence of an entity type \u2013 Example: name of a cat, registrationNo. of a student\n\u2013 The attribute is directly stored in the database\n\u2022 Derived Attribute \u2013 The attribute is (usually) not stored in the DB but derived from an other, stored attribute\n\u2022 Multi-Valued Attributes (lists) \u2013 Attribute holding (possibly) multiple values for each occurrence of an entity type.\n\u2022 In special cases, it might also be stored for read performance reasons\n\u2022 Graphically indicated by a double-bordered oval \u2022 Textually represented by enclosing in {}\n\u2013 Indicated by dashed oval \u2013 Example: Age can be derived from birth date, average grade can be derived by aggregating all stored grades\n\u2013 Example: telephoneNo. of a student \u2022 Student ({phoneNo})\nbirth date\nCat\nname\nStudent\nphoneNo\nCat\nname\nStudent age\nSingle Valued EN 3.3\nMulti-Valued\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nStored 25\nEN 3.3\n2. ER - Keys\nDerived 26\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n2. ER - Keys\n\u2022 Entities are only described by attribute values\n\u2022 Key attribute examples\n\u2013 Two entities with identical values cannot be distinguished (no OIDs, row IDs, etc.)\n\u2013 Single key attribute\nregistration Number\nStudent name\n\u2022 Student (registrationNumber, name) \u2022 (432451, Hans M\u00fcller)\n\u2022 Entities (usually) must be distinguishable \u2022 Identification of entities with key attributes\n\u2013 Composite key (multiple key attributes) \u2022 Car (licensePlate(districtId, letterId, numericId), brand, year) districtId \u2022 ((BS,CL,797),VW,1998) license \u2022 Please note that each letterId Plate Car key attribute itself is numericId brand not unique!\n\u2013 Value combination of key attributes is unique within all possible extensions of the entity types \u2013 Key attributes are indicated by underlining the attribute name\nyear Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n27\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n2. ER Modeling\n2. ER - Domains\n\u2022 Example Entity Type \u2013 Book (isbn, {author(firstName, lastName)}, title, subtitle, publisher(name,city, country), {revision(no, year)} ) \u2013 (0321204484, {(Ramez, Elmasri), (Shamkant, Navathe)}, Fundamentals of Database Systems, (Pearson, Boston, US), {(4,2004),(2, 1994)})\n\u2022 Attributes cannot have arbitrary values: they are restricted by the attribute value sets (domains) \u2013 Zip Codes may be restricted to integer values between 0 and 99999 \u2013 Names may be restricted to character strings with maximum length of 120 \u2013 Domains are not displayed in ER diagrams \u2013 Usually, popular data types are used to describe domains in data modeling\nfirstName isbn author\nlastName\nBook\ntitle\nrevision\nno\nyear EN 3.3\n28\nname\npublisher\n\u2022 e.g. integer, float, string, \u2026.\ncity\ncountry\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n29\nEN 3.3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n30\n2. ER - Domains\n2. ER - Domains \u2022 Using data types for modeling domains is actually a crutch\n\u2022 Commonly used data types Name\nSyntax\ndescription\ninteger\ninteger\n32-Bit signed integer values between -231 and 231\ndouble\ndouble\n64-Bit floating point values of approximate precision\nnumeric\nnumeric(p, s)\nA number with p digit before the decimal and s digitals after the decimal\ncharacter\nchar(x)\nA textual string of the exact length x\nvarying character\nvarchar(x)\nA textual string of the maximum length x\ndate\ndate\nStores year, month, and day\ntime\ntime\nStores hour, minute, and second values\n\u2013 The original intention of domains was modeling all valid values for an attribute \u2022 Colors: {Red, Blue, Green,Yellow}\n\u2013 Using data types is very coarse and more a convenient solution \u2022 Colors: varchar(30) ???\n\u2013 To compensate for the lacking precision, often restrictions are used \u2022 Colors: varchar(30) restricted to {Red, Blue, Green,Yellow}\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n31\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n2. ER \u2013 NULL Values\n2. ER \u2013 NULL Values \u2022 What does it mean when you encounter a NULLvalue?\n\u2022 Sometimes, an attribute value is not known or an attribute does not apply for an entity\n\u2013 Attribute is not applicable\n\u2013 This is denoted by the special value NULL\n\u2022 e.g. attribute \u201dmaiden name\u201d when you don\u201ft have one\n\u2022 So called NULL-value\n\u2013 Example: Attribute \u201cuniversityDegree\u201d of entity Heinz M\u00fcller may be NULL, if he does not have a degree \u2013 NULL is usually always allowed for any domain or data type unless explicitly excluded\nEN 3.3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n\u2013 Value is not known \u2013 Value will be filled in later \u2013 Value is not important for the current entity \u2013 Value was just forgotten to set\n\u2022 Actually there are more than 30 possible interpretations\u2026\n33\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nER \u2013 Relationships\n\u2022 Similar to entities, ERDs do not model individual relationships, but relationship types \u2022 Relationship type\n\u2013 The power to model dependencies and relationships is needed\n\u2013 Named set of all similar relationships with the same attributes and relating to the same entity types\n\u2022 In ER, there can be relationships between entities \u2013 Each relationship instance has a degree\nname\n\u2022 i.e. the number of entities is relates to\n\u2022 Diamond labeled with the name of the relationship type \u2022 Usually, name starts with lower-case letters\n\u2022 Relationship set\n\u2013 A relationship instance may have attributes\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n34\nER \u2013 Relationships\n\u2022 Entities are not enough to model a miniworld\nEN 3.4\n32\n\u2013 Set of all relationship instances of a certain relationship type 35\nEN 3.4\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n36\nER \u2013 Relationships\nER \u2013 Relationships\n\u2022 Relationships relate entities within the entity sets involved in the relationship type to each Relationship Type R Entity Type B other A\nR\n\u2022 Example: \u2013 There is an \u201eownership\u201f relation between cats and persons Person\nB\nRelationship Instance R1\nEntity A1\nRelationship Set R A\nR\nA2\nA1\nA3 R2\nB3\nA5\nA6\n\u2022 Does every person own a cat? Does every cat have an owner? \u2022 Can a cat have multiple owners or a person own multiple cats? \u2022 Since when does a person own some cat? \u2022 Who owns whom?\nB\nB2\nA4\nB4\nR3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n37\nEN 3.4\nER \u2013 Relationship Cardinality\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n38\nER \u2013 Relationship Cardinality\n\u2022 Additionally, restrictions on the combinations of entities participating in an entity set are needed\n\u2022 Cardinality annotations \u2013 One cardinality annotation per entity type / relationship end \u2022 Minimum and maximum constrains possible\n\u2013 Example: Relationship type \u201cmarried to\u201d\ncardinality\n\u2013 Common Cardinality Expressions:\nPerson\n\u2022 (0, 1) : Zero to one instances are bound by the relationship (i.e. relationship end is optional) \u2022 (1, 1) : Exactly one instance is bound \u2022 (0, *) : Any number of instances may be bound \u2022 (1, *) : At least one instance is bound (at least one instance up to any number) \u2022 No annotation is usually interpreted as (0, *) \u2022 If only one symbol / number s is used, this is interpreted as (0, s)\nmarried to\n\u2022 Unless living in Utah, a restriction should be modeled that each person can only be married to single person at a time \u2013 i.e. each person entity may only appear once in the \u201cmarried to\u201d relationship set\n\u2022 Cardinality annotations are used for this \u2022 Relationship types referring to just one entity type are called recursive Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n\u2013 * = (0, *); 4 = (0, 4)\n\u2022 Sometimes, N or M are used instead of * 39\n\u2022 Cardinalities express how often a specific entity may appear within a relationship set (0, 1)\nEN 3.4\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n40\nER \u2013 Relationships\nER \u2013 Relationship Cardinality\nA\nCat\n\u2013 But more modeling detail is needed\nEntity Set B\nB1\nR1\nowns\n\u2022 \u201cTo each entity of type B, one or two entities of type A are related\u201d\n(1, 2) r\nB\n(0, 1) A\n\u2013 A specific entity of type A may appear up to once in the relationship set, an entity of type B appears at least once and at most twice\nA\n\u2022 This means: Up to two entities of type A may relate to one entity of type B. Some entities in A are not related to any in B. All entities in B are related to at least one in A.\n(1, 2) r\nA2\nA1\nr\nB1\nR1\nA3\nB\nB2\nA4\nA6\nB\nR2 A5\nR3\nB3\nR4 Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n41\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n42\nER \u2013 Relationships\nER \u2013 Relationship Cardinality\n1\n\u2022 Example:\n1\nPerson\n\u2013 \u201cEach person can only be married to one other person\u201c 1 1\nmarried to\nPerson\nmarried to\nPerson\nP2\nP1\n\u2013 Each entity can only appear in one instance of the \u201cmarried to\u201d entity set\nP6\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n43\nP5\nR2\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nER \u2013 Relationship Cardinality\n44\nER \u2013 Relationship Cardinality\n\u2022 Example:\n\u2022 Example:\n\u2013 \u201cA cat has up to 4 owners, but at least one. A person may own any number of cats. \u201c (0, *) Person\nR1\nP4\n\u2022 Note: following this model a person actually can marry him/herself EN 3.4\nmarried to\nP3\n\u2013 \u201cA person may supervise any other number of persons\u201d \u2022 \u201cDrake Mallard supervises Launchpad McQuack\u201d \u2022 \u201cDrake Mallard supervises Gosaly Mallard\u201d\n(1, 4) owns\nCat\n\u2022 \u201cLisa owns Snowball\u201d, \u201cLisa owns Snowball II\u201d (0, *) Person\nsuper vises\nsupervises\n(0, 1)\nEN 3.4\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n45\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n46\nER \u2013 Relationship Roles\nER \u2013 Relationship Cardinality \u2022 Cardinalities for binary relationship types can be classified into common, more general cardinality types\n\u2022 Often, it is beneficial to clarify the role of an entity within a relationship \u2013 Example: Relationship \u201csupervises\u201d\n\u2013 These cardinality types are also often found in other modeling paradigms \u2022 1:1 (One-To-One) \u2013 Each entity of the first type can only relate to exactly one entity of the other type \u2022 1:N (One-To-Many) \u2013 Each entity of the first type can relate to multiple entities of the other type \u2022 N:1 (Many-To-One) \u2013 Multiple entities of the first type can relate to exactly one entity of the second type \u2022 N:M (Many-To-Many) \u2013 No restrictions. Any number of entities of first type may relate to any number of entities of second type. Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nEN 3.4\n47\nPerson (0, 1)\n(0, *)\nsuper vises\n\u2013 What is meant? Who is the supervisor? Who is the supervised person? \u2013 Roles can be annotated on the relationship lines Person (0, 1)\n(0, *) supervisor supervisee\nsuper vises\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n48\nER \u2013 Relationship Degree\nER \u2013 Relationship Attributes\n\u2022 Relationship instances involve multiple entities \u2013 The number of entities in each relationship instance is called relationship degree\n\u2022 Similar to entities, relationship types may even have attributes salary\nworks for\nPerson\n\u2022 Degree=2 : Binary Relation Person\nowns\n\u2013 For 1:1 relationships, the relationship attribute may be migrated to any of the participating attributes \u2013 For 1:N relationships, the attribute may be only migrated to the entity type on the N-side \u2013 For N:M relationships, no migration is possible\nCat\n\u2022 Degree=3: Ternary Relation Supplier\nCustomer\nsupplies\nCompany\nPart Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n49\nER \u2013 Total Participation\nER \u2013 Weak Entities\n\u2022 To express that all entities of an entity type appear in a certain relationship set, the concept of total participation can be used \u2013 The entity type which is totally participating is indicated by a double line \u2013 Example: \u201cEach driver\u201fs license must belong to a person\u201d Person\nowns\n\u2022 Each entity needs to be identifiable by a set of key attributes \u2022 Entities existing independently of the context are called strong entities \u2013 A person exists whether it is married or not\n\u2022 In contrast, there may be entities without an unique key called weak entities\nDrivers License\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n50\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n51\nEN 3.5\n52\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nER \u2013 Weak Entities\nER \u2013 Weak Entities \u2013 Weak entity types and identifying relationship types are depicted by double-lined rectangles \u2013 Example:\n\u2022 Weak entities are identified by being related to strong entities \u2013 The strong entities \u201cown\u201d the weak entity\n\u2022 \u201cAn online shopping order contains several order items\u201d\n\u2022 The weak one cannot exist without the strong ones\n\u2013 The relationships relating the strong to the weak are called identifying relationships\n(0,*) orderNo\n\u2022 The weak entity is always totally participating in that relationship\nOrder\nis part of\n(1,1) OrderItem\nitemLine\n\u2022 An order item can only exits within an order \u2022 Each order item can be identified by the orderNo of it\u201fs owning order and its itemLine\n\u2013 Weak entities have partial keys which are unique within the identifying relationship sets of their strong entities \u2022 To be unique, the weak entity instance has to borrow the keys of the respective strong entity instances Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n53\nEN 3.5\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n54\nER \u2013 Overview \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022\nEntity Type Weak Entity Type Attribute Key Attribute Multi-valued Attribute Composite Attribute Derived Attribute Relationship Type Identifying Rel. Type\nER \u2013 Overview \u2022 Total participation of E2 in R\nName Name\nE1\nname\nname\nE1\nname\nname\n\u2013 An instance of E1 may relate to multiple instances of E2 (0, N) (0,1)\nname\n55\nEN 3.5\nE2\n56\n\u2022 Crow\u2019s foot notation was initially developed by Gordon Everest\n\u2013 Different styles for entities, relationships and attributes \u2013 No standardization among them \u2013 Also, notations are often freely mixed\n\u2013 Derivate of ERD notation \u2013 Main Goal \u2022 Consolidate graphical representation \u2022 Provide a better and faster overview \u2022 Allow for easier layouting\n\u2022 ER diagrams can look completely different depending on the used tool / book\n\u2013 Widespread use in many current tools and documentations\n\u2022 In the following, we introduce the (somewhat popular) crow\u201fs feet notation Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nr\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nER \u2013 Crow\u2019s Foot Notation\n\u2022 There is a plethora of alternative notations for ER diagrams\n57\nEN 3.5\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nER \u2013 Crow\u2019s Foot Notation\n58\nER \u2013 Crow\u2019s Foot Notation \u2022 Relationship Types\n\u2022 Entity Types\n\u2013 Relationship types are modeled by lines connecting the entities \u2013 Line is annotated with the name of the relationship which is a verb \u2013 Cardinalities are represented graphically\n\u2013 Entity Types are modeled with a named box \u2013 Attribute names are written inside the box separated by a line \u2022 Key attributes are marked with a leading asterisk \u2022 Composite attributes are represented with indentation firstName isbn author\nEN 3.5\nE2\n\u2022 Specific cardinality with min and max\nname\nER \u2013 Alternative Notations\nBook\nr\nname\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nEN 3.5\nE2\n\u2013 An instance of E1 may relate to multiple instances of E2 N 1\nname\nE1\nEN 3.5\nr\n\u2022 Cardinality\nname\nlastName\ntitle\n\u2022 \u2022 \u2022 \u2022 \u2022\nBook * isbn author firstName lastName title\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n59\nEN 3.5\n(0, 1) : Zero or one (1, 1) : Exactly one (0, *) : Zero or more (1, *) : one or more ATTENTION: Cardinalities are written on the opposite side of the relationship (in contrast to \u201cclassic ER\u201d) Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n60\nER \u2013 Crow\u2019s Foot Notation (0, *)\nER \u2013 Crow\u2019s Foot Notation\n(1, *)\nPerson\nowns\nowns\nPerson\n\u2022 Problem\nCat\n\u2013 N-ary relationship types are not supported by crow\u201fs foot notation, neither are relationship attributes\nCat\n\u2022 Workaround solution: \u2022 What happens to n-ary relationships or relationship attributes?\n\u2013 Intermediate entities must be used \u2022 N-ary relationships are broken down in a series of binary relationship types anchoring on the intermediate entity\nnumber\nSupplier\n*\n*\nsupplies\nCostumer\nA\n* Part EN 3.5\nR\nC\nA\nRa\nB 61\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nER \u2013 Crow\u2019s Foot Notation\nR\nRB\nRc\nB\nC\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n62\nER \u2013 Crow\u2019s Foot Notation\nnumber\nSupplier\n*\nsupplies\n*\n\u2022 Originally, ER diagrams were intended to be used on a conceptual level\nCustomer\n* Part\nSupplier\nprovides\nSupplies number\n\u2013 Model data in an abstract fashion independent of implementation is used\n\u2022 Crow\u201fs foot notation sacrifices some conceptual expressiveness\nCustomer\n\u2013 Model is closer to the logical model (i.e. the way the data is later really stored in a system) \u2013 This is not always desirable and may obfuscate the intended semantics of the model\ncontains Part\nEN 3.5\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n63\nER \u2013 Even more notations\u2026\n\u2022 Black Diamond Notation\n\u2013 Based on Crow\u201fs Feet Notation \u2013 Developed by Richard Barker for Oracle\u201fs CASE modeling books and tools in1986 \u2013 Cardinalities are represented differently\n\u2013 Cardinalities are represented differently \u2022 Cardinality annotation per relationship, not per relationship end 1 1 \u2022 1:1 N 1 \u2022 1:N M N \u2022 N:M\n(0, 1) : Zero or one (1, 1) : Exactly one (0, N) : Zero or more (1, N) : one or more Cardinalities position similar to Crow\u201fs Foot notation and opposite to classic ER\n\u2013 Also, N-ary relationships possible\n\u2013 Different notation of subtypes \u2022 See next lecture\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n64\nER \u2013 Even more notations\u2026\n\u2022 Barker\u2019s notation\n\u2022 \u2022 \u2022 \u2022 \u2022\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n\u2022 ternary 65\nN\n1 1\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n66\n2. ER \u2013 Mathematical Model\n2. ER \u2013 Mathematical Model\n\u2022 Mathematically, an attribute A of entity type E with domain V is a function from E to the power set P(V) \u2013 A : E \u2192 P(V) \u2022 The power set P(V) of V is the set of all subsets of V\n\u2022 A relationship type R among n entity types E1, E2, \u2026, En defines a relationship set among instances of these entity types \u2013 Each relationship instance ri within the relationship set R associates n individual entities (e1, e2, \u2026, en), and each entity ej in ri is member of the entity type Ej, 1\u2264j\u2264n \u2013 Alternatively, the relationship type R can be seen as a subset of the Cartesian product of the entity types\n\u2013 The value of an attribute of the entity e is denoted as A(e) \u2013 This definition covers \u2022 null values (empty set) \u2022 single-valued attributes (restricted to singleton sets) \u2022 multi-valued attributes (no restrictions)\n\u2013 For a composite attribute A(A1, A2, \u2026, An),V is defined as\n\u2022 R \u2286 E1 E2 \u2026, En\n\u2022 V = P(V1) P(V2) \u2026 P(Vn)\nEN 3.3\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n67\nAn example\n68\n\u2022 How to start? What to do?\n\u2013 In our database, we have students. They have a name, a registration number, and a course of study. \u2013 The university offers lectures. Each lecture may be part of some course of study in a certain semester. Lectures may have other lectures as prerequisites. They have a title, provide a specific number of credits and have an unique ID \u2013 Each year, some of these lectures are offered by a professor at a certain day at a fixed time in a specific room. Students may register for that lecture. \u2013 Professors have a name and are member of a specific department. 69\nAn example\n\u2013 Find the basic entity types \u2013 Find the attributes of entities \u2022 Decide to which entity an attribute should be assigned \u2022 Which attributes are key attributes? \u2022 Some attributes are better modeled as own entities, which ones?\n\u2013 Define the relationship types \u2022 Which role do entities play? \u2022 Do relationships require additional entity types? \u2022 Are the relationships total? Identifying? Are weak entities involved? \u2022 What are the cardinalities of the relationship type? Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n70\nAn example\n\u2022 Which are our entity types? \u2013 In our database, we have students. They have a name, a registration number and a course of study. \u2013 The university offers lectures. Each lecture may be part of some course of study in a certain semester. Lectures may have other lectures as prerequisites. They have a title, provide a specific number of credits and have unique ID \u2013 Each year, some of these lectures are offered by a professor at a certain day at a fixed time in a specific room. Students may attend that lecture. \u2013 Professors have a name and are member of a specific department. Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nAn example\n\u2022 We want to model a simple university database\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nEN 3.3\n71\nStudent\nLecture\nProfessor\n\u2022 What attributes are there? \u2013 In our database, we have students. They have a name, a registration number and a course of study. \u2013 The university offers lectures. Each lecture may be part of some course of study in a certain semester. Lectures may have other lectures as prerequisites. They have a title, provide a specific number of credits and have unique ID \u2013 Professors have a name and are member of a specific department. Relational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n72\nAn example registration number\ntitle\nregistration number\ncredits\nid\nStudent\nAn example Professor\nLecture\ntitle\ncredits\nid\nid\nLecture\nStudent\nProfessor prereq.\ncourse of study\nname course of study\nprerequisite lecture\npart of\nname name\nCourse of Study\ncurriculum semester\nname\n\u2022 First try\u2026\n\u2022 Key is automatically generated and has no meaning beside unique identification\n\u2013 Course of study is an entity type now\n\u2022 Which entity types are additionally related?\n\u2013 \u201cPrerequisite lecture\u201d also is not a good attribute\n\u2013 \u201cEach year, some lectures of the pool of all lectures are offered by a professor at a certain day at a fixed time in a specific room. Students may attend that lecture.\u201d\n\u2022 Prerequisite lectures are also lectures. Use a relationship instead!\n\u2013 \u201cProfessor\u201d does not have key attributes 73\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nAn example room\nday of week\ntime registration number\nsemester\nattends\nStudent\nProfessor\nLecture\n\u2022 Not really intuitive\u2026 \u2022 Use an intermediate entity instead?\ncurriculum semester\nCourse of Study name\nAn example day of week\nN\nroom\nLecture instance\nattends\n1\n1\ncurriculum semester\nCourse of Study\n\u2022 Better? \u2022 Add cardinalities \u2022 Add total and identifying annotations\nname\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n76\n\u2013 Note that the \u201cpart of\u201d relationship had to use an intermediate entity\nProfessor\nteaches\ninstantiates\ntitle\nprereq.\n\u2022 The same example using Crow\u201fs Foot Notation\nid\nN\n1 name\nLecture\nAn example semester\nN\ndepartment\npart of\n75\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\ntime\nname credits\nid\nenrolls\npart of\nProfessor\nteaches\ninstantiates\ntitle\nprereq.\nid\ndepartment\ncredits\nid\nenrolls\nsemester\nname name\nroom\nLecture instance\nattends\ninstanciates title\nday of week\ntime\nregistration number\nid\nteaches\ninstanciate\nname\n74\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\nAn example\nStudent\nname\n\u2013 Professors use a surrogate key now\n\u2022 Used by student and lecture. Even worse, lecture refers to a course of study in a specific curriculum semester. \u2022 Use additional entity type with relationships!\nregistration number\ndepartment\n\u2022 Second try\n\u2013 This model is really crappy! \u2013 \u201cCourse of study\u201d does not seem to be an attribute\nStudent\nname\ncurriculum semester\nenrolls\ndepartment\nname\ndepartment\ncredits\nN id\nenrolls\nLecture N\nN\nN\nN\nStudent\nN\n+registrationNumber name prereq.\npart of curriculum semester\nCourse of Study\n\u2022 Better? \u2022 Add cardinalities\nattends\nLecture Instance\nteaches\ntime dayOfWeek room semester\nProfessor +id name department\nenrolls instanciates\nCourseOfStudy has\nname\n+name\nPartOf curriculumSemester\nhas\nLecture +id title credits hasPrerequisite\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n77\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n78\nAn example \u2022 Modeling is not that simple \u2022 Many possible (and also correct) ways of modeling the same miniworld \u2013 Some are more elegant, some are less elegant\n\u2022 Models alone are not enough, they need to be documented \u2013 What are the meanings of the attributes? The meanings of the relationships?\nRelational Database Systems 1 \u2013 Wolf-Tilo Balke \u2013 Institut f\u00fcr Informationssysteme \u2013 TU Braunschweig\n79", "language": null, "image": "https://pdfcoffee.com/img/exercise-12-relational-database-systems-1-pdf-free.jpg", "pagetype": "website", "links": ["/cdn-cgi/l/email-protection#f39a9d959cb3839795909c95959696dd909c9e", "https://pdfcoffee.com/login", "https://pdfcoffee.com/register", "#Deutsch", "#Espa\u00f1ol", "#Fran\u00e7ais", "#Portugu\u00eas", "https://pdfcoffee.com/", "https://pdfcoffee.com/", "#Categories", "https://pdfcoffee.com/category/career-money", "https://pdfcoffee.com/category/personal-growth", "https://pdfcoffee.com/category/politics-current-affairs", "https://pdfcoffee.com/category/science-tech", "https://pdfcoffee.com/category/health-fitness", "https://pdfcoffee.com/category/lifestyle", "https://pdfcoffee.com/category/entertainment", "https://pdfcoffee.com/category/biographies-history", "https://pdfcoffee.com/category/fiction", "https://pdfcoffee.com/top-stories", "https://pdfcoffee.com/best-stories", "https://pdfcoffee.com/publish", "https://pdfcoffee.com/documents", "https://pdfcoffee.com/", "#Farwa", "https://pdfcoffee.com/category/conceptual-model?t=Conceptual+Model", "https://pdfcoffee.com/category/data-model?t=Data+Model", "https://pdfcoffee.com/category/databases?t=Databases", "https://pdfcoffee.com/category/relational-database?t=Relational+Database", "https://pdfcoffee.com/category/computer-data?t=Computer+Data", "https://www.facebook.com/sharer.php?u=https://pdfcoffee.com/exercise-12-relational-database-systems-1-pdf-free.html", "https://twitter.com/intent/tweet?url=https://pdfcoffee.com/exercise-12-relational-database-systems-1-pdf-free.html", "#", "https://pdfcoffee.com/download/exercise-12-relational-database-systems-1-pdf-free.html", "https://pdfcoffee.com/relational-database-programming-pdf-free.html", "https://pdfcoffee.com/relational-database-management-system-pdf-free.html", "https://pdfcoffee.com/karakteristik-relational-database-pdf-free.html", "https://pdfcoffee.com/database-systems-concepts-1-pdf-free.html", "https://pdfcoffee.com/relational-database-management-system-material-pdf-free.html", "https://pdfcoffee.com/fundamentals-of-relational-database-design-pdf-free.html", "https://pdfcoffee.com/database-systems-pdf-free.html", "https://pdfcoffee.com/exercise-12--pdf-free.html", "https://pdfcoffee.com/shipment-database-exercise-pdf-free.html", "https://pdfcoffee.com/", "/cdn-cgi/l/email-protection#0960676f6649796d6f6a666f6f6c6c276a6664", "https://pdfcoffee.com/about", "https://pdfcoffee.com/contact", "https://pdfcoffee.com/copyright", "https://pdfcoffee.com/privacy", "https://pdfcoffee.com/term", "https://pdfcoffee.com/faq", "https://pdfcoffee.com/cookie_policy", "#", "#", "#", "#", "#", "https://pdfcoffee.com/cookie_policy", "#"]}